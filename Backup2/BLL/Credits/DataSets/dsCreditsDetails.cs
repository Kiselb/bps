//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace BPS.BLL.Credits.DataSets {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsCreditsDetails : DataSet {
        
        private CreditsDetailsDataTable tableCreditsDetails;
        
        public dsCreditsDetails() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsCreditsDetails(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["CreditsDetails"] != null)) {
                    this.Tables.Add(new CreditsDetailsDataTable(ds.Tables["CreditsDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CreditsDetailsDataTable CreditsDetails {
            get {
                return this.tableCreditsDetails;
            }
        }
        
        public override DataSet Clone() {
            dsCreditsDetails cln = ((dsCreditsDetails)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["CreditsDetails"] != null)) {
                this.Tables.Add(new CreditsDetailsDataTable(ds.Tables["CreditsDetails"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableCreditsDetails = ((CreditsDetailsDataTable)(this.Tables["CreditsDetails"]));
            if ((this.tableCreditsDetails != null)) {
                this.tableCreditsDetails.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsCreditsDetails";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsCredits.xsd";
            this.Locale = new System.Globalization.CultureInfo("ru-RU");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableCreditsDetails = new CreditsDetailsDataTable();
            this.Tables.Add(this.tableCreditsDetails);
            this.InitExpressions();
        }
        
        private bool ShouldSerializeCreditsDetails() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        private void InitExpressions() {
            this.tableCreditsDetails.GrantedTextColumn.Expression = "iif(IsGranted=1,\'Выдача\',\'Получение\')";
            this.tableCreditsDetails.CreditTypeColumn.Expression = "iif(IsExtended = 1, \'С планом погашения\', iif(IsShortTerm = 1, \'Краткосрочный\', \'" +
"Долгосрочный\'))";
        }
        
        public delegate void CreditsDetailsRowChangeEventHandler(object sender, CreditsDetailsRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CreditsDetailsDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnClientName;
            
            private DataColumn columnClientGroupID;
            
            private DataColumn columnCreditStatusName;
            
            private DataColumn columnCreditID;
            
            private DataColumn columnCreditStatusID;
            
            private DataColumn columnClientID;
            
            private DataColumn columnIsGranted;
            
            private DataColumn columnStartDate;
            
            private DataColumn columnEndDate;
            
            private DataColumn columnCreditSum;
            
            private DataColumn columnServiceCharge;
            
            private DataColumn columnServiceChargeExtra;
            
            private DataColumn columnRemarks;
            
            private DataColumn columnGrantedText;
            
            private DataColumn columnCreditSumCurrency;
            
            private DataColumn columnClientGroupName;
            
            private DataColumn columnIsExtended;
            
            private DataColumn columnIsShortTerm;
            
            private DataColumn columnCreditType;
            
            private DataColumn columnSumPercentNormalCurrent;
            
            private DataColumn columnSumPercentPenaltyCurrent;
            
            private DataColumn columnDropSumPercentNormalCurrent;
            
            private DataColumn columnDropSumPercentPenaltyCurrent;
            
            private DataColumn columnDueSumPercentNormalCurrent;
            
            private DataColumn columnDueSumPercentPenaltyCurrent;
            
            private DataColumn columnCreditOpLastDate;
            
            private DataColumn columnLastDateChargeNormal;
            
            private DataColumn columnLastDateChargePenalty;
            
            private DataColumn columnLastDateChargeNormalDrop;
            
            private DataColumn columnLastDateChargePenaltyDrop;
            
            private DataColumn columnLastDateCreditDrop;
            
            private DataColumn columnCreditTypeText;
            
            private DataColumn columnCreditSumRedemption;
            
            private DataColumn columnPercentageSinkMode;
            
            private DataColumn columnPercentageRoundMode;
            
            private DataColumn columnCreditIncreaseSum;
            
            private DataColumn columnCreditIncreaseLastDate;
            
            private DataColumn columnSumForDropPercentNormal;
            
            private DataColumn columnSumForDropPercentPenalty;
            
            internal CreditsDetailsDataTable() : 
                    base("CreditsDetails") {
                this.InitClass();
            }
            
            internal CreditsDetailsDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            internal DataColumn ClientGroupIDColumn {
                get {
                    return this.columnClientGroupID;
                }
            }
            
            internal DataColumn CreditStatusNameColumn {
                get {
                    return this.columnCreditStatusName;
                }
            }
            
            internal DataColumn CreditIDColumn {
                get {
                    return this.columnCreditID;
                }
            }
            
            internal DataColumn CreditStatusIDColumn {
                get {
                    return this.columnCreditStatusID;
                }
            }
            
            internal DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            internal DataColumn IsGrantedColumn {
                get {
                    return this.columnIsGranted;
                }
            }
            
            internal DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            internal DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            internal DataColumn CreditSumColumn {
                get {
                    return this.columnCreditSum;
                }
            }
            
            internal DataColumn ServiceChargeColumn {
                get {
                    return this.columnServiceCharge;
                }
            }
            
            internal DataColumn ServiceChargeExtraColumn {
                get {
                    return this.columnServiceChargeExtra;
                }
            }
            
            internal DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            internal DataColumn GrantedTextColumn {
                get {
                    return this.columnGrantedText;
                }
            }
            
            internal DataColumn CreditSumCurrencyColumn {
                get {
                    return this.columnCreditSumCurrency;
                }
            }
            
            internal DataColumn ClientGroupNameColumn {
                get {
                    return this.columnClientGroupName;
                }
            }
            
            internal DataColumn IsExtendedColumn {
                get {
                    return this.columnIsExtended;
                }
            }
            
            internal DataColumn IsShortTermColumn {
                get {
                    return this.columnIsShortTerm;
                }
            }
            
            internal DataColumn CreditTypeColumn {
                get {
                    return this.columnCreditType;
                }
            }
            
            internal DataColumn SumPercentNormalCurrentColumn {
                get {
                    return this.columnSumPercentNormalCurrent;
                }
            }
            
            internal DataColumn SumPercentPenaltyCurrentColumn {
                get {
                    return this.columnSumPercentPenaltyCurrent;
                }
            }
            
            internal DataColumn DropSumPercentNormalCurrentColumn {
                get {
                    return this.columnDropSumPercentNormalCurrent;
                }
            }
            
            internal DataColumn DropSumPercentPenaltyCurrentColumn {
                get {
                    return this.columnDropSumPercentPenaltyCurrent;
                }
            }
            
            internal DataColumn DueSumPercentNormalCurrentColumn {
                get {
                    return this.columnDueSumPercentNormalCurrent;
                }
            }
            
            internal DataColumn DueSumPercentPenaltyCurrentColumn {
                get {
                    return this.columnDueSumPercentPenaltyCurrent;
                }
            }
            
            internal DataColumn CreditOpLastDateColumn {
                get {
                    return this.columnCreditOpLastDate;
                }
            }
            
            internal DataColumn LastDateChargeNormalColumn {
                get {
                    return this.columnLastDateChargeNormal;
                }
            }
            
            internal DataColumn LastDateChargePenaltyColumn {
                get {
                    return this.columnLastDateChargePenalty;
                }
            }
            
            internal DataColumn LastDateChargeNormalDropColumn {
                get {
                    return this.columnLastDateChargeNormalDrop;
                }
            }
            
            internal DataColumn LastDateChargePenaltyDropColumn {
                get {
                    return this.columnLastDateChargePenaltyDrop;
                }
            }
            
            internal DataColumn LastDateCreditDropColumn {
                get {
                    return this.columnLastDateCreditDrop;
                }
            }
            
            internal DataColumn CreditTypeTextColumn {
                get {
                    return this.columnCreditTypeText;
                }
            }
            
            internal DataColumn CreditSumRedemptionColumn {
                get {
                    return this.columnCreditSumRedemption;
                }
            }
            
            internal DataColumn PercentageSinkModeColumn {
                get {
                    return this.columnPercentageSinkMode;
                }
            }
            
            internal DataColumn PercentageRoundModeColumn {
                get {
                    return this.columnPercentageRoundMode;
                }
            }
            
            internal DataColumn CreditIncreaseSumColumn {
                get {
                    return this.columnCreditIncreaseSum;
                }
            }
            
            internal DataColumn CreditIncreaseLastDateColumn {
                get {
                    return this.columnCreditIncreaseLastDate;
                }
            }
            
            internal DataColumn SumForDropPercentNormalColumn {
                get {
                    return this.columnSumForDropPercentNormal;
                }
            }
            
            internal DataColumn SumForDropPercentPenaltyColumn {
                get {
                    return this.columnSumForDropPercentPenalty;
                }
            }
            
            public CreditsDetailsRow this[int index] {
                get {
                    return ((CreditsDetailsRow)(this.Rows[index]));
                }
            }
            
            public event CreditsDetailsRowChangeEventHandler CreditsDetailsRowChanged;
            
            public event CreditsDetailsRowChangeEventHandler CreditsDetailsRowChanging;
            
            public event CreditsDetailsRowChangeEventHandler CreditsDetailsRowDeleted;
            
            public event CreditsDetailsRowChangeEventHandler CreditsDetailsRowDeleting;
            
            public void AddCreditsDetailsRow(CreditsDetailsRow row) {
                this.Rows.Add(row);
            }
            
            public CreditsDetailsRow AddCreditsDetailsRow(
                        string ClientName, 
                        int ClientGroupID, 
                        string CreditStatusName, 
                        int CreditStatusID, 
                        int ClientID, 
                        bool IsGranted, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        System.Double CreditSum, 
                        System.Double ServiceCharge, 
                        System.Double ServiceChargeExtra, 
                        string Remarks, 
                        string GrantedText, 
                        string CreditSumCurrency, 
                        string ClientGroupName, 
                        bool IsExtended, 
                        bool IsShortTerm, 
                        string CreditType, 
                        System.Double SumPercentNormalCurrent, 
                        System.Double SumPercentPenaltyCurrent, 
                        System.Double DropSumPercentNormalCurrent, 
                        System.Double DropSumPercentPenaltyCurrent, 
                        System.Double DueSumPercentNormalCurrent, 
                        System.Double DueSumPercentPenaltyCurrent, 
                        System.DateTime CreditOpLastDate, 
                        System.DateTime LastDateChargeNormal, 
                        System.DateTime LastDateChargePenalty, 
                        System.DateTime LastDateChargeNormalDrop, 
                        System.DateTime LastDateChargePenaltyDrop, 
                        System.DateTime LastDateCreditDrop, 
                        string CreditTypeText, 
                        System.Double CreditSumRedemption, 
                        bool PercentageSinkMode, 
                        bool PercentageRoundMode, 
                        System.Double CreditIncreaseSum, 
                        System.DateTime CreditIncreaseLastDate, 
                        System.Double SumForDropPercentNormal, 
                        System.Double SumForDropPercentPenalty) {
                CreditsDetailsRow rowCreditsDetailsRow = ((CreditsDetailsRow)(this.NewRow()));
                rowCreditsDetailsRow.ItemArray = new object[] {
                        ClientName,
                        ClientGroupID,
                        CreditStatusName,
                        null,
                        CreditStatusID,
                        ClientID,
                        IsGranted,
                        StartDate,
                        EndDate,
                        CreditSum,
                        ServiceCharge,
                        ServiceChargeExtra,
                        Remarks,
                        GrantedText,
                        CreditSumCurrency,
                        ClientGroupName,
                        IsExtended,
                        IsShortTerm,
                        CreditType,
                        SumPercentNormalCurrent,
                        SumPercentPenaltyCurrent,
                        DropSumPercentNormalCurrent,
                        DropSumPercentPenaltyCurrent,
                        DueSumPercentNormalCurrent,
                        DueSumPercentPenaltyCurrent,
                        CreditOpLastDate,
                        LastDateChargeNormal,
                        LastDateChargePenalty,
                        LastDateChargeNormalDrop,
                        LastDateChargePenaltyDrop,
                        LastDateCreditDrop,
                        CreditTypeText,
                        CreditSumRedemption,
                        PercentageSinkMode,
                        PercentageRoundMode,
                        CreditIncreaseSum,
                        CreditIncreaseLastDate,
                        SumForDropPercentNormal,
                        SumForDropPercentPenalty};
                this.Rows.Add(rowCreditsDetailsRow);
                return rowCreditsDetailsRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CreditsDetailsDataTable cln = ((CreditsDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CreditsDetailsDataTable();
            }
            
            internal void InitVars() {
                this.columnClientName = this.Columns["ClientName"];
                this.columnClientGroupID = this.Columns["ClientGroupID"];
                this.columnCreditStatusName = this.Columns["CreditStatusName"];
                this.columnCreditID = this.Columns["CreditID"];
                this.columnCreditStatusID = this.Columns["CreditStatusID"];
                this.columnClientID = this.Columns["ClientID"];
                this.columnIsGranted = this.Columns["IsGranted"];
                this.columnStartDate = this.Columns["StartDate"];
                this.columnEndDate = this.Columns["EndDate"];
                this.columnCreditSum = this.Columns["CreditSum"];
                this.columnServiceCharge = this.Columns["ServiceCharge"];
                this.columnServiceChargeExtra = this.Columns["ServiceChargeExtra"];
                this.columnRemarks = this.Columns["Remarks"];
                this.columnGrantedText = this.Columns["GrantedText"];
                this.columnCreditSumCurrency = this.Columns["CreditSumCurrency"];
                this.columnClientGroupName = this.Columns["ClientGroupName"];
                this.columnIsExtended = this.Columns["IsExtended"];
                this.columnIsShortTerm = this.Columns["IsShortTerm"];
                this.columnCreditType = this.Columns["CreditType"];
                this.columnSumPercentNormalCurrent = this.Columns["SumPercentNormalCurrent"];
                this.columnSumPercentPenaltyCurrent = this.Columns["SumPercentPenaltyCurrent"];
                this.columnDropSumPercentNormalCurrent = this.Columns["DropSumPercentNormalCurrent"];
                this.columnDropSumPercentPenaltyCurrent = this.Columns["DropSumPercentPenaltyCurrent"];
                this.columnDueSumPercentNormalCurrent = this.Columns["DueSumPercentNormalCurrent"];
                this.columnDueSumPercentPenaltyCurrent = this.Columns["DueSumPercentPenaltyCurrent"];
                this.columnCreditOpLastDate = this.Columns["CreditOpLastDate"];
                this.columnLastDateChargeNormal = this.Columns["LastDateChargeNormal"];
                this.columnLastDateChargePenalty = this.Columns["LastDateChargePenalty"];
                this.columnLastDateChargeNormalDrop = this.Columns["LastDateChargeNormalDrop"];
                this.columnLastDateChargePenaltyDrop = this.Columns["LastDateChargePenaltyDrop"];
                this.columnLastDateCreditDrop = this.Columns["LastDateCreditDrop"];
                this.columnCreditTypeText = this.Columns["CreditTypeText"];
                this.columnCreditSumRedemption = this.Columns["CreditSumRedemption"];
                this.columnPercentageSinkMode = this.Columns["PercentageSinkMode"];
                this.columnPercentageRoundMode = this.Columns["PercentageRoundMode"];
                this.columnCreditIncreaseSum = this.Columns["CreditIncreaseSum"];
                this.columnCreditIncreaseLastDate = this.Columns["CreditIncreaseLastDate"];
                this.columnSumForDropPercentNormal = this.Columns["SumForDropPercentNormal"];
                this.columnSumForDropPercentPenalty = this.Columns["SumForDropPercentPenalty"];
            }
            
            private void InitClass() {
                this.columnClientName = new DataColumn("ClientName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientName);
                this.columnClientGroupID = new DataColumn("ClientGroupID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientGroupID);
                this.columnCreditStatusName = new DataColumn("CreditStatusName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditStatusName);
                this.columnCreditID = new DataColumn("CreditID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditID);
                this.columnCreditStatusID = new DataColumn("CreditStatusID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditStatusID);
                this.columnClientID = new DataColumn("ClientID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientID);
                this.columnIsGranted = new DataColumn("IsGranted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsGranted);
                this.columnStartDate = new DataColumn("StartDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStartDate);
                this.columnEndDate = new DataColumn("EndDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEndDate);
                this.columnCreditSum = new DataColumn("CreditSum", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditSum);
                this.columnServiceCharge = new DataColumn("ServiceCharge", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceCharge);
                this.columnServiceChargeExtra = new DataColumn("ServiceChargeExtra", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnServiceChargeExtra);
                this.columnRemarks = new DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRemarks);
                this.columnGrantedText = new DataColumn("GrantedText", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGrantedText);
                this.columnCreditSumCurrency = new DataColumn("CreditSumCurrency", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditSumCurrency);
                this.columnClientGroupName = new DataColumn("ClientGroupName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClientGroupName);
                this.columnIsExtended = new DataColumn("IsExtended", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsExtended);
                this.columnIsShortTerm = new DataColumn("IsShortTerm", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsShortTerm);
                this.columnCreditType = new DataColumn("CreditType", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditType);
                this.columnSumPercentNormalCurrent = new DataColumn("SumPercentNormalCurrent", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSumPercentNormalCurrent);
                this.columnSumPercentPenaltyCurrent = new DataColumn("SumPercentPenaltyCurrent", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSumPercentPenaltyCurrent);
                this.columnDropSumPercentNormalCurrent = new DataColumn("DropSumPercentNormalCurrent", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDropSumPercentNormalCurrent);
                this.columnDropSumPercentPenaltyCurrent = new DataColumn("DropSumPercentPenaltyCurrent", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDropSumPercentPenaltyCurrent);
                this.columnDueSumPercentNormalCurrent = new DataColumn("DueSumPercentNormalCurrent", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDueSumPercentNormalCurrent);
                this.columnDueSumPercentPenaltyCurrent = new DataColumn("DueSumPercentPenaltyCurrent", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDueSumPercentPenaltyCurrent);
                this.columnCreditOpLastDate = new DataColumn("CreditOpLastDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditOpLastDate);
                this.columnLastDateChargeNormal = new DataColumn("LastDateChargeNormal", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastDateChargeNormal);
                this.columnLastDateChargePenalty = new DataColumn("LastDateChargePenalty", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastDateChargePenalty);
                this.columnLastDateChargeNormalDrop = new DataColumn("LastDateChargeNormalDrop", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastDateChargeNormalDrop);
                this.columnLastDateChargePenaltyDrop = new DataColumn("LastDateChargePenaltyDrop", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastDateChargePenaltyDrop);
                this.columnLastDateCreditDrop = new DataColumn("LastDateCreditDrop", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLastDateCreditDrop);
                this.columnCreditTypeText = new DataColumn("CreditTypeText", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditTypeText);
                this.columnCreditSumRedemption = new DataColumn("CreditSumRedemption", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditSumRedemption);
                this.columnPercentageSinkMode = new DataColumn("PercentageSinkMode", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPercentageSinkMode);
                this.columnPercentageRoundMode = new DataColumn("PercentageRoundMode", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPercentageRoundMode);
                this.columnCreditIncreaseSum = new DataColumn("CreditIncreaseSum", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditIncreaseSum);
                this.columnCreditIncreaseLastDate = new DataColumn("CreditIncreaseLastDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCreditIncreaseLastDate);
                this.columnSumForDropPercentNormal = new DataColumn("SumForDropPercentNormal", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSumForDropPercentNormal);
                this.columnSumForDropPercentPenalty = new DataColumn("SumForDropPercentPenalty", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSumForDropPercentPenalty);
                this.columnCreditID.AutoIncrement = true;
                this.columnCreditID.AllowDBNull = false;
                this.columnCreditID.ReadOnly = true;
                this.columnCreditStatusID.AllowDBNull = false;
                this.columnClientID.AllowDBNull = false;
                this.columnIsGranted.AllowDBNull = false;
                this.columnStartDate.AllowDBNull = false;
                this.columnEndDate.AllowDBNull = false;
                this.columnCreditSum.AllowDBNull = false;
                this.columnServiceCharge.AllowDBNull = false;
                this.columnServiceChargeExtra.AllowDBNull = false;
                this.columnGrantedText.ReadOnly = true;
                this.columnCreditType.ReadOnly = true;
            }
            
            public CreditsDetailsRow NewCreditsDetailsRow() {
                return ((CreditsDetailsRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CreditsDetailsRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CreditsDetailsRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CreditsDetailsRowChanged != null)) {
                    this.CreditsDetailsRowChanged(this, new CreditsDetailsRowChangeEvent(((CreditsDetailsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CreditsDetailsRowChanging != null)) {
                    this.CreditsDetailsRowChanging(this, new CreditsDetailsRowChangeEvent(((CreditsDetailsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CreditsDetailsRowDeleted != null)) {
                    this.CreditsDetailsRowDeleted(this, new CreditsDetailsRowChangeEvent(((CreditsDetailsRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CreditsDetailsRowDeleting != null)) {
                    this.CreditsDetailsRowDeleting(this, new CreditsDetailsRowChangeEvent(((CreditsDetailsRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCreditsDetailsRow(CreditsDetailsRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CreditsDetailsRow : DataRow {
            
            private CreditsDetailsDataTable tableCreditsDetails;
            
            internal CreditsDetailsRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCreditsDetails = ((CreditsDetailsDataTable)(this.Table));
            }
            
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.ClientNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.ClientNameColumn] = value;
                }
            }
            
            public int ClientGroupID {
                get {
                    try {
                        return ((int)(this[this.tableCreditsDetails.ClientGroupIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.ClientGroupIDColumn] = value;
                }
            }
            
            public string CreditStatusName {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.CreditStatusNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditStatusNameColumn] = value;
                }
            }
            
            public int CreditID {
                get {
                    return ((int)(this[this.tableCreditsDetails.CreditIDColumn]));
                }
                set {
                    this[this.tableCreditsDetails.CreditIDColumn] = value;
                }
            }
            
            public int CreditStatusID {
                get {
                    return ((int)(this[this.tableCreditsDetails.CreditStatusIDColumn]));
                }
                set {
                    this[this.tableCreditsDetails.CreditStatusIDColumn] = value;
                }
            }
            
            public int ClientID {
                get {
                    return ((int)(this[this.tableCreditsDetails.ClientIDColumn]));
                }
                set {
                    this[this.tableCreditsDetails.ClientIDColumn] = value;
                }
            }
            
            public bool IsGranted {
                get {
                    return ((bool)(this[this.tableCreditsDetails.IsGrantedColumn]));
                }
                set {
                    this[this.tableCreditsDetails.IsGrantedColumn] = value;
                }
            }
            
            public System.DateTime StartDate {
                get {
                    return ((System.DateTime)(this[this.tableCreditsDetails.StartDateColumn]));
                }
                set {
                    this[this.tableCreditsDetails.StartDateColumn] = value;
                }
            }
            
            public System.DateTime EndDate {
                get {
                    return ((System.DateTime)(this[this.tableCreditsDetails.EndDateColumn]));
                }
                set {
                    this[this.tableCreditsDetails.EndDateColumn] = value;
                }
            }
            
            public System.Double CreditSum {
                get {
                    return ((System.Double)(this[this.tableCreditsDetails.CreditSumColumn]));
                }
                set {
                    this[this.tableCreditsDetails.CreditSumColumn] = value;
                }
            }
            
            public System.Double ServiceCharge {
                get {
                    return ((System.Double)(this[this.tableCreditsDetails.ServiceChargeColumn]));
                }
                set {
                    this[this.tableCreditsDetails.ServiceChargeColumn] = value;
                }
            }
            
            public System.Double ServiceChargeExtra {
                get {
                    return ((System.Double)(this[this.tableCreditsDetails.ServiceChargeExtraColumn]));
                }
                set {
                    this[this.tableCreditsDetails.ServiceChargeExtraColumn] = value;
                }
            }
            
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.RemarksColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.RemarksColumn] = value;
                }
            }
            
            public string GrantedText {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.GrantedTextColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.GrantedTextColumn] = value;
                }
            }
            
            public string CreditSumCurrency {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.CreditSumCurrencyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditSumCurrencyColumn] = value;
                }
            }
            
            public string ClientGroupName {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.ClientGroupNameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.ClientGroupNameColumn] = value;
                }
            }
            
            public bool IsExtended {
                get {
                    try {
                        return ((bool)(this[this.tableCreditsDetails.IsExtendedColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.IsExtendedColumn] = value;
                }
            }
            
            public bool IsShortTerm {
                get {
                    try {
                        return ((bool)(this[this.tableCreditsDetails.IsShortTermColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.IsShortTermColumn] = value;
                }
            }
            
            public string CreditType {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.CreditTypeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditTypeColumn] = value;
                }
            }
            
            public System.Double SumPercentNormalCurrent {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.SumPercentNormalCurrentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.SumPercentNormalCurrentColumn] = value;
                }
            }
            
            public System.Double SumPercentPenaltyCurrent {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.SumPercentPenaltyCurrentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.SumPercentPenaltyCurrentColumn] = value;
                }
            }
            
            public System.Double DropSumPercentNormalCurrent {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.DropSumPercentNormalCurrentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.DropSumPercentNormalCurrentColumn] = value;
                }
            }
            
            public System.Double DropSumPercentPenaltyCurrent {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.DropSumPercentPenaltyCurrentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.DropSumPercentPenaltyCurrentColumn] = value;
                }
            }
            
            public System.Double DueSumPercentNormalCurrent {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.DueSumPercentNormalCurrentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.DueSumPercentNormalCurrentColumn] = value;
                }
            }
            
            public System.Double DueSumPercentPenaltyCurrent {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.DueSumPercentPenaltyCurrentColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.DueSumPercentPenaltyCurrentColumn] = value;
                }
            }
            
            public System.DateTime CreditOpLastDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCreditsDetails.CreditOpLastDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditOpLastDateColumn] = value;
                }
            }
            
            public System.DateTime LastDateChargeNormal {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCreditsDetails.LastDateChargeNormalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.LastDateChargeNormalColumn] = value;
                }
            }
            
            public System.DateTime LastDateChargePenalty {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCreditsDetails.LastDateChargePenaltyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.LastDateChargePenaltyColumn] = value;
                }
            }
            
            public System.DateTime LastDateChargeNormalDrop {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCreditsDetails.LastDateChargeNormalDropColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.LastDateChargeNormalDropColumn] = value;
                }
            }
            
            public System.DateTime LastDateChargePenaltyDrop {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCreditsDetails.LastDateChargePenaltyDropColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.LastDateChargePenaltyDropColumn] = value;
                }
            }
            
            public System.DateTime LastDateCreditDrop {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCreditsDetails.LastDateCreditDropColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.LastDateCreditDropColumn] = value;
                }
            }
            
            public string CreditTypeText {
                get {
                    try {
                        return ((string)(this[this.tableCreditsDetails.CreditTypeTextColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditTypeTextColumn] = value;
                }
            }
            
            public System.Double CreditSumRedemption {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.CreditSumRedemptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditSumRedemptionColumn] = value;
                }
            }
            
            public bool PercentageSinkMode {
                get {
                    try {
                        return ((bool)(this[this.tableCreditsDetails.PercentageSinkModeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.PercentageSinkModeColumn] = value;
                }
            }
            
            public bool PercentageRoundMode {
                get {
                    try {
                        return ((bool)(this[this.tableCreditsDetails.PercentageRoundModeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.PercentageRoundModeColumn] = value;
                }
            }
            
            public System.Double CreditIncreaseSum {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.CreditIncreaseSumColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditIncreaseSumColumn] = value;
                }
            }
            
            public System.DateTime CreditIncreaseLastDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCreditsDetails.CreditIncreaseLastDateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.CreditIncreaseLastDateColumn] = value;
                }
            }
            
            public System.Double SumForDropPercentNormal {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.SumForDropPercentNormalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.SumForDropPercentNormalColumn] = value;
                }
            }
            
            public System.Double SumForDropPercentPenalty {
                get {
                    try {
                        return ((System.Double)(this[this.tableCreditsDetails.SumForDropPercentPenaltyColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditsDetails.SumForDropPercentPenaltyColumn] = value;
                }
            }
            
            public bool IsClientNameNull() {
                return this.IsNull(this.tableCreditsDetails.ClientNameColumn);
            }
            
            public void SetClientNameNull() {
                this[this.tableCreditsDetails.ClientNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientGroupIDNull() {
                return this.IsNull(this.tableCreditsDetails.ClientGroupIDColumn);
            }
            
            public void SetClientGroupIDNull() {
                this[this.tableCreditsDetails.ClientGroupIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditStatusNameNull() {
                return this.IsNull(this.tableCreditsDetails.CreditStatusNameColumn);
            }
            
            public void SetCreditStatusNameNull() {
                this[this.tableCreditsDetails.CreditStatusNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsRemarksNull() {
                return this.IsNull(this.tableCreditsDetails.RemarksColumn);
            }
            
            public void SetRemarksNull() {
                this[this.tableCreditsDetails.RemarksColumn] = System.Convert.DBNull;
            }
            
            public bool IsGrantedTextNull() {
                return this.IsNull(this.tableCreditsDetails.GrantedTextColumn);
            }
            
            public void SetGrantedTextNull() {
                this[this.tableCreditsDetails.GrantedTextColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditSumCurrencyNull() {
                return this.IsNull(this.tableCreditsDetails.CreditSumCurrencyColumn);
            }
            
            public void SetCreditSumCurrencyNull() {
                this[this.tableCreditsDetails.CreditSumCurrencyColumn] = System.Convert.DBNull;
            }
            
            public bool IsClientGroupNameNull() {
                return this.IsNull(this.tableCreditsDetails.ClientGroupNameColumn);
            }
            
            public void SetClientGroupNameNull() {
                this[this.tableCreditsDetails.ClientGroupNameColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsExtendedNull() {
                return this.IsNull(this.tableCreditsDetails.IsExtendedColumn);
            }
            
            public void SetIsExtendedNull() {
                this[this.tableCreditsDetails.IsExtendedColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsShortTermNull() {
                return this.IsNull(this.tableCreditsDetails.IsShortTermColumn);
            }
            
            public void SetIsShortTermNull() {
                this[this.tableCreditsDetails.IsShortTermColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditTypeNull() {
                return this.IsNull(this.tableCreditsDetails.CreditTypeColumn);
            }
            
            public void SetCreditTypeNull() {
                this[this.tableCreditsDetails.CreditTypeColumn] = System.Convert.DBNull;
            }
            
            public bool IsSumPercentNormalCurrentNull() {
                return this.IsNull(this.tableCreditsDetails.SumPercentNormalCurrentColumn);
            }
            
            public void SetSumPercentNormalCurrentNull() {
                this[this.tableCreditsDetails.SumPercentNormalCurrentColumn] = System.Convert.DBNull;
            }
            
            public bool IsSumPercentPenaltyCurrentNull() {
                return this.IsNull(this.tableCreditsDetails.SumPercentPenaltyCurrentColumn);
            }
            
            public void SetSumPercentPenaltyCurrentNull() {
                this[this.tableCreditsDetails.SumPercentPenaltyCurrentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDropSumPercentNormalCurrentNull() {
                return this.IsNull(this.tableCreditsDetails.DropSumPercentNormalCurrentColumn);
            }
            
            public void SetDropSumPercentNormalCurrentNull() {
                this[this.tableCreditsDetails.DropSumPercentNormalCurrentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDropSumPercentPenaltyCurrentNull() {
                return this.IsNull(this.tableCreditsDetails.DropSumPercentPenaltyCurrentColumn);
            }
            
            public void SetDropSumPercentPenaltyCurrentNull() {
                this[this.tableCreditsDetails.DropSumPercentPenaltyCurrentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDueSumPercentNormalCurrentNull() {
                return this.IsNull(this.tableCreditsDetails.DueSumPercentNormalCurrentColumn);
            }
            
            public void SetDueSumPercentNormalCurrentNull() {
                this[this.tableCreditsDetails.DueSumPercentNormalCurrentColumn] = System.Convert.DBNull;
            }
            
            public bool IsDueSumPercentPenaltyCurrentNull() {
                return this.IsNull(this.tableCreditsDetails.DueSumPercentPenaltyCurrentColumn);
            }
            
            public void SetDueSumPercentPenaltyCurrentNull() {
                this[this.tableCreditsDetails.DueSumPercentPenaltyCurrentColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditOpLastDateNull() {
                return this.IsNull(this.tableCreditsDetails.CreditOpLastDateColumn);
            }
            
            public void SetCreditOpLastDateNull() {
                this[this.tableCreditsDetails.CreditOpLastDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastDateChargeNormalNull() {
                return this.IsNull(this.tableCreditsDetails.LastDateChargeNormalColumn);
            }
            
            public void SetLastDateChargeNormalNull() {
                this[this.tableCreditsDetails.LastDateChargeNormalColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastDateChargePenaltyNull() {
                return this.IsNull(this.tableCreditsDetails.LastDateChargePenaltyColumn);
            }
            
            public void SetLastDateChargePenaltyNull() {
                this[this.tableCreditsDetails.LastDateChargePenaltyColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastDateChargeNormalDropNull() {
                return this.IsNull(this.tableCreditsDetails.LastDateChargeNormalDropColumn);
            }
            
            public void SetLastDateChargeNormalDropNull() {
                this[this.tableCreditsDetails.LastDateChargeNormalDropColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastDateChargePenaltyDropNull() {
                return this.IsNull(this.tableCreditsDetails.LastDateChargePenaltyDropColumn);
            }
            
            public void SetLastDateChargePenaltyDropNull() {
                this[this.tableCreditsDetails.LastDateChargePenaltyDropColumn] = System.Convert.DBNull;
            }
            
            public bool IsLastDateCreditDropNull() {
                return this.IsNull(this.tableCreditsDetails.LastDateCreditDropColumn);
            }
            
            public void SetLastDateCreditDropNull() {
                this[this.tableCreditsDetails.LastDateCreditDropColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditTypeTextNull() {
                return this.IsNull(this.tableCreditsDetails.CreditTypeTextColumn);
            }
            
            public void SetCreditTypeTextNull() {
                this[this.tableCreditsDetails.CreditTypeTextColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditSumRedemptionNull() {
                return this.IsNull(this.tableCreditsDetails.CreditSumRedemptionColumn);
            }
            
            public void SetCreditSumRedemptionNull() {
                this[this.tableCreditsDetails.CreditSumRedemptionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPercentageSinkModeNull() {
                return this.IsNull(this.tableCreditsDetails.PercentageSinkModeColumn);
            }
            
            public void SetPercentageSinkModeNull() {
                this[this.tableCreditsDetails.PercentageSinkModeColumn] = System.Convert.DBNull;
            }
            
            public bool IsPercentageRoundModeNull() {
                return this.IsNull(this.tableCreditsDetails.PercentageRoundModeColumn);
            }
            
            public void SetPercentageRoundModeNull() {
                this[this.tableCreditsDetails.PercentageRoundModeColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditIncreaseSumNull() {
                return this.IsNull(this.tableCreditsDetails.CreditIncreaseSumColumn);
            }
            
            public void SetCreditIncreaseSumNull() {
                this[this.tableCreditsDetails.CreditIncreaseSumColumn] = System.Convert.DBNull;
            }
            
            public bool IsCreditIncreaseLastDateNull() {
                return this.IsNull(this.tableCreditsDetails.CreditIncreaseLastDateColumn);
            }
            
            public void SetCreditIncreaseLastDateNull() {
                this[this.tableCreditsDetails.CreditIncreaseLastDateColumn] = System.Convert.DBNull;
            }
            
            public bool IsSumForDropPercentNormalNull() {
                return this.IsNull(this.tableCreditsDetails.SumForDropPercentNormalColumn);
            }
            
            public void SetSumForDropPercentNormalNull() {
                this[this.tableCreditsDetails.SumForDropPercentNormalColumn] = System.Convert.DBNull;
            }
            
            public bool IsSumForDropPercentPenaltyNull() {
                return this.IsNull(this.tableCreditsDetails.SumForDropPercentPenaltyColumn);
            }
            
            public void SetSumForDropPercentPenaltyNull() {
                this[this.tableCreditsDetails.SumForDropPercentPenaltyColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CreditsDetailsRowChangeEvent : EventArgs {
            
            private CreditsDetailsRow eventRow;
            
            private DataRowAction eventAction;
            
            public CreditsDetailsRowChangeEvent(CreditsDetailsRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CreditsDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
