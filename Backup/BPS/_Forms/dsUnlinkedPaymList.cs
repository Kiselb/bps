//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace BPS._Forms {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsUnlinkedPaymList : DataSet {
        
        private GetUnlinkedPaymListDataTable tableGetUnlinkedPaymList;
        
        public dsUnlinkedPaymList() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsUnlinkedPaymList(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetUnlinkedPaymList"] != null)) {
                    this.Tables.Add(new GetUnlinkedPaymListDataTable(ds.Tables["GetUnlinkedPaymList"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetUnlinkedPaymListDataTable GetUnlinkedPaymList {
            get {
                return this.tableGetUnlinkedPaymList;
            }
        }
        
        public override DataSet Clone() {
            dsUnlinkedPaymList cln = ((dsUnlinkedPaymList)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["GetUnlinkedPaymList"] != null)) {
                this.Tables.Add(new GetUnlinkedPaymListDataTable(ds.Tables["GetUnlinkedPaymList"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableGetUnlinkedPaymList = ((GetUnlinkedPaymListDataTable)(this.Tables["GetUnlinkedPaymList"]));
            if ((this.tableGetUnlinkedPaymList != null)) {
                this.tableGetUnlinkedPaymList.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsUnlinkedPaymList";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsUnlinkedPaymList.xsd";
            this.Locale = new System.Globalization.CultureInfo("ru-RU");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableGetUnlinkedPaymList = new GetUnlinkedPaymListDataTable();
            this.Tables.Add(this.tableGetUnlinkedPaymList);
        }
        
        private bool ShouldSerializeGetUnlinkedPaymList() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void GetUnlinkedPaymListRowChangeEventHandler(object sender, GetUnlinkedPaymListRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetUnlinkedPaymListDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnRAccountCorr;
            
            private DataColumn columnOrgNameCorr;
            
            private DataColumn columnRAccount;
            
            private DataColumn columnOrgName;
            
            private DataColumn columnPaymentOrderID;
            
            private DataColumn columnPaymentOrderStatusID;
            
            private DataColumn columnHeaderID;
            
            private DataColumn columnPaymentOrderDate;
            
            private DataColumn columnPaymentNo;
            
            private DataColumn columnOrgAccountID;
            
            private DataColumn columnOrgAccountIDCorr;
            
            private DataColumn columnDirection;
            
            private DataColumn columnPaymentOrderSum;
            
            private DataColumn columnPaymentOrderPurpose;
            
            private DataColumn columnRemarks;
            
            private DataColumn columnIsPrinted;
            
            private DataColumn columnAccountStatementID;
            
            private DataColumn columnOrgsAccountsID;
            
            private DataColumn columnOrgIDCorr;
            
            private DataColumn columnExpr3;
            
            private DataColumn columnOrgID;
            
            private DataColumn columnAccountID;
            
            private DataColumn columnAccountIDCorr;
            
            private DataColumn columnCurrencyIDCorr;
            
            internal GetUnlinkedPaymListDataTable() : 
                    base("GetUnlinkedPaymList") {
                this.InitClass();
            }
            
            internal GetUnlinkedPaymListDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn RAccountCorrColumn {
                get {
                    return this.columnRAccountCorr;
                }
            }
            
            internal DataColumn OrgNameCorrColumn {
                get {
                    return this.columnOrgNameCorr;
                }
            }
            
            internal DataColumn RAccountColumn {
                get {
                    return this.columnRAccount;
                }
            }
            
            internal DataColumn OrgNameColumn {
                get {
                    return this.columnOrgName;
                }
            }
            
            internal DataColumn PaymentOrderIDColumn {
                get {
                    return this.columnPaymentOrderID;
                }
            }
            
            internal DataColumn PaymentOrderStatusIDColumn {
                get {
                    return this.columnPaymentOrderStatusID;
                }
            }
            
            internal DataColumn HeaderIDColumn {
                get {
                    return this.columnHeaderID;
                }
            }
            
            internal DataColumn PaymentOrderDateColumn {
                get {
                    return this.columnPaymentOrderDate;
                }
            }
            
            internal DataColumn PaymentNoColumn {
                get {
                    return this.columnPaymentNo;
                }
            }
            
            internal DataColumn OrgAccountIDColumn {
                get {
                    return this.columnOrgAccountID;
                }
            }
            
            internal DataColumn OrgAccountIDCorrColumn {
                get {
                    return this.columnOrgAccountIDCorr;
                }
            }
            
            internal DataColumn DirectionColumn {
                get {
                    return this.columnDirection;
                }
            }
            
            internal DataColumn PaymentOrderSumColumn {
                get {
                    return this.columnPaymentOrderSum;
                }
            }
            
            internal DataColumn PaymentOrderPurposeColumn {
                get {
                    return this.columnPaymentOrderPurpose;
                }
            }
            
            internal DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            internal DataColumn IsPrintedColumn {
                get {
                    return this.columnIsPrinted;
                }
            }
            
            internal DataColumn AccountStatementIDColumn {
                get {
                    return this.columnAccountStatementID;
                }
            }
            
            internal DataColumn OrgsAccountsIDColumn {
                get {
                    return this.columnOrgsAccountsID;
                }
            }
            
            internal DataColumn OrgIDCorrColumn {
                get {
                    return this.columnOrgIDCorr;
                }
            }
            
            internal DataColumn Expr3Column {
                get {
                    return this.columnExpr3;
                }
            }
            
            internal DataColumn OrgIDColumn {
                get {
                    return this.columnOrgID;
                }
            }
            
            internal DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            internal DataColumn AccountIDCorrColumn {
                get {
                    return this.columnAccountIDCorr;
                }
            }
            
            internal DataColumn CurrencyIDCorrColumn {
                get {
                    return this.columnCurrencyIDCorr;
                }
            }
            
            public GetUnlinkedPaymListRow this[int index] {
                get {
                    return ((GetUnlinkedPaymListRow)(this.Rows[index]));
                }
            }
            
            public event GetUnlinkedPaymListRowChangeEventHandler GetUnlinkedPaymListRowChanged;
            
            public event GetUnlinkedPaymListRowChangeEventHandler GetUnlinkedPaymListRowChanging;
            
            public event GetUnlinkedPaymListRowChangeEventHandler GetUnlinkedPaymListRowDeleted;
            
            public event GetUnlinkedPaymListRowChangeEventHandler GetUnlinkedPaymListRowDeleting;
            
            public void AddGetUnlinkedPaymListRow(GetUnlinkedPaymListRow row) {
                this.Rows.Add(row);
            }
            
            public GetUnlinkedPaymListRow AddGetUnlinkedPaymListRow(
                        string RAccountCorr, 
                        string OrgNameCorr, 
                        string RAccount, 
                        string OrgName, 
                        int PaymentOrderStatusID, 
                        int HeaderID, 
                        System.DateTime PaymentOrderDate, 
                        string PaymentNo, 
                        int OrgAccountID, 
                        int OrgAccountIDCorr, 
                        bool Direction, 
                        System.Double PaymentOrderSum, 
                        string PaymentOrderPurpose, 
                        string Remarks, 
                        bool IsPrinted, 
                        int AccountStatementID, 
                        int AccountID, 
                        int AccountIDCorr, 
                        string CurrencyIDCorr) {
                GetUnlinkedPaymListRow rowGetUnlinkedPaymListRow = ((GetUnlinkedPaymListRow)(this.NewRow()));
                rowGetUnlinkedPaymListRow.ItemArray = new object[] {
                        RAccountCorr,
                        OrgNameCorr,
                        RAccount,
                        OrgName,
                        null,
                        PaymentOrderStatusID,
                        HeaderID,
                        PaymentOrderDate,
                        PaymentNo,
                        OrgAccountID,
                        OrgAccountIDCorr,
                        Direction,
                        PaymentOrderSum,
                        PaymentOrderPurpose,
                        Remarks,
                        IsPrinted,
                        AccountStatementID,
                        null,
                        null,
                        null,
                        null,
                        AccountID,
                        AccountIDCorr,
                        CurrencyIDCorr};
                this.Rows.Add(rowGetUnlinkedPaymListRow);
                return rowGetUnlinkedPaymListRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                GetUnlinkedPaymListDataTable cln = ((GetUnlinkedPaymListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new GetUnlinkedPaymListDataTable();
            }
            
            internal void InitVars() {
                this.columnRAccountCorr = this.Columns["RAccountCorr"];
                this.columnOrgNameCorr = this.Columns["OrgNameCorr"];
                this.columnRAccount = this.Columns["RAccount"];
                this.columnOrgName = this.Columns["OrgName"];
                this.columnPaymentOrderID = this.Columns["PaymentOrderID"];
                this.columnPaymentOrderStatusID = this.Columns["PaymentOrderStatusID"];
                this.columnHeaderID = this.Columns["HeaderID"];
                this.columnPaymentOrderDate = this.Columns["PaymentOrderDate"];
                this.columnPaymentNo = this.Columns["PaymentNo"];
                this.columnOrgAccountID = this.Columns["OrgAccountID"];
                this.columnOrgAccountIDCorr = this.Columns["OrgAccountIDCorr"];
                this.columnDirection = this.Columns["Direction"];
                this.columnPaymentOrderSum = this.Columns["PaymentOrderSum"];
                this.columnPaymentOrderPurpose = this.Columns["PaymentOrderPurpose"];
                this.columnRemarks = this.Columns["Remarks"];
                this.columnIsPrinted = this.Columns["IsPrinted"];
                this.columnAccountStatementID = this.Columns["AccountStatementID"];
                this.columnOrgsAccountsID = this.Columns["OrgsAccountsID"];
                this.columnOrgIDCorr = this.Columns["OrgIDCorr"];
                this.columnExpr3 = this.Columns["Expr3"];
                this.columnOrgID = this.Columns["OrgID"];
                this.columnAccountID = this.Columns["AccountID"];
                this.columnAccountIDCorr = this.Columns["AccountIDCorr"];
                this.columnCurrencyIDCorr = this.Columns["CurrencyIDCorr"];
            }
            
            private void InitClass() {
                this.columnRAccountCorr = new DataColumn("RAccountCorr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRAccountCorr);
                this.columnOrgNameCorr = new DataColumn("OrgNameCorr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrgNameCorr);
                this.columnRAccount = new DataColumn("RAccount", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRAccount);
                this.columnOrgName = new DataColumn("OrgName", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrgName);
                this.columnPaymentOrderID = new DataColumn("PaymentOrderID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPaymentOrderID);
                this.columnPaymentOrderStatusID = new DataColumn("PaymentOrderStatusID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPaymentOrderStatusID);
                this.columnHeaderID = new DataColumn("HeaderID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHeaderID);
                this.columnPaymentOrderDate = new DataColumn("PaymentOrderDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPaymentOrderDate);
                this.columnPaymentNo = new DataColumn("PaymentNo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPaymentNo);
                this.columnOrgAccountID = new DataColumn("OrgAccountID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrgAccountID);
                this.columnOrgAccountIDCorr = new DataColumn("OrgAccountIDCorr", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrgAccountIDCorr);
                this.columnDirection = new DataColumn("Direction", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDirection);
                this.columnPaymentOrderSum = new DataColumn("PaymentOrderSum", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPaymentOrderSum);
                this.columnPaymentOrderPurpose = new DataColumn("PaymentOrderPurpose", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPaymentOrderPurpose);
                this.columnRemarks = new DataColumn("Remarks", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRemarks);
                this.columnIsPrinted = new DataColumn("IsPrinted", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsPrinted);
                this.columnAccountStatementID = new DataColumn("AccountStatementID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountStatementID);
                this.columnOrgsAccountsID = new DataColumn("OrgsAccountsID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrgsAccountsID);
                this.columnOrgIDCorr = new DataColumn("OrgIDCorr", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrgIDCorr);
                this.columnExpr3 = new DataColumn("Expr3", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExpr3);
                this.columnOrgID = new DataColumn("OrgID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrgID);
                this.columnAccountID = new DataColumn("AccountID", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountID);
                this.columnAccountIDCorr = new DataColumn("AccountIDCorr", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAccountIDCorr);
                this.columnCurrencyIDCorr = new DataColumn("CurrencyIDCorr", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCurrencyIDCorr);
                this.columnRAccountCorr.AllowDBNull = false;
                this.columnOrgNameCorr.AllowDBNull = false;
                this.columnRAccount.AllowDBNull = false;
                this.columnOrgName.AllowDBNull = false;
                this.columnPaymentOrderID.AutoIncrement = true;
                this.columnPaymentOrderID.AllowDBNull = false;
                this.columnPaymentOrderID.ReadOnly = true;
                this.columnPaymentOrderStatusID.AllowDBNull = false;
                this.columnPaymentOrderDate.AllowDBNull = false;
                this.columnPaymentNo.AllowDBNull = false;
                this.columnOrgAccountID.AllowDBNull = false;
                this.columnOrgAccountIDCorr.AllowDBNull = false;
                this.columnDirection.AllowDBNull = false;
                this.columnPaymentOrderSum.AllowDBNull = false;
                this.columnIsPrinted.AllowDBNull = false;
                this.columnOrgsAccountsID.AutoIncrement = true;
                this.columnOrgsAccountsID.AllowDBNull = false;
                this.columnOrgsAccountsID.ReadOnly = true;
                this.columnOrgIDCorr.AutoIncrement = true;
                this.columnOrgIDCorr.AllowDBNull = false;
                this.columnOrgIDCorr.ReadOnly = true;
                this.columnExpr3.AutoIncrement = true;
                this.columnExpr3.AllowDBNull = false;
                this.columnExpr3.ReadOnly = true;
                this.columnOrgID.AutoIncrement = true;
                this.columnOrgID.AllowDBNull = false;
                this.columnOrgID.ReadOnly = true;
                this.columnAccountID.AllowDBNull = false;
                this.columnAccountIDCorr.AllowDBNull = false;
                this.columnCurrencyIDCorr.AllowDBNull = false;
            }
            
            public GetUnlinkedPaymListRow NewGetUnlinkedPaymListRow() {
                return ((GetUnlinkedPaymListRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new GetUnlinkedPaymListRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(GetUnlinkedPaymListRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetUnlinkedPaymListRowChanged != null)) {
                    this.GetUnlinkedPaymListRowChanged(this, new GetUnlinkedPaymListRowChangeEvent(((GetUnlinkedPaymListRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetUnlinkedPaymListRowChanging != null)) {
                    this.GetUnlinkedPaymListRowChanging(this, new GetUnlinkedPaymListRowChangeEvent(((GetUnlinkedPaymListRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetUnlinkedPaymListRowDeleted != null)) {
                    this.GetUnlinkedPaymListRowDeleted(this, new GetUnlinkedPaymListRowChangeEvent(((GetUnlinkedPaymListRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetUnlinkedPaymListRowDeleting != null)) {
                    this.GetUnlinkedPaymListRowDeleting(this, new GetUnlinkedPaymListRowChangeEvent(((GetUnlinkedPaymListRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveGetUnlinkedPaymListRow(GetUnlinkedPaymListRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetUnlinkedPaymListRow : DataRow {
            
            private GetUnlinkedPaymListDataTable tableGetUnlinkedPaymList;
            
            internal GetUnlinkedPaymListRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetUnlinkedPaymList = ((GetUnlinkedPaymListDataTable)(this.Table));
            }
            
            public string RAccountCorr {
                get {
                    return ((string)(this[this.tableGetUnlinkedPaymList.RAccountCorrColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.RAccountCorrColumn] = value;
                }
            }
            
            public string OrgNameCorr {
                get {
                    return ((string)(this[this.tableGetUnlinkedPaymList.OrgNameCorrColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.OrgNameCorrColumn] = value;
                }
            }
            
            public string RAccount {
                get {
                    return ((string)(this[this.tableGetUnlinkedPaymList.RAccountColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.RAccountColumn] = value;
                }
            }
            
            public string OrgName {
                get {
                    return ((string)(this[this.tableGetUnlinkedPaymList.OrgNameColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.OrgNameColumn] = value;
                }
            }
            
            public int PaymentOrderID {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.PaymentOrderIDColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.PaymentOrderIDColumn] = value;
                }
            }
            
            public int PaymentOrderStatusID {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.PaymentOrderStatusIDColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.PaymentOrderStatusIDColumn] = value;
                }
            }
            
            public int HeaderID {
                get {
                    try {
                        return ((int)(this[this.tableGetUnlinkedPaymList.HeaderIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetUnlinkedPaymList.HeaderIDColumn] = value;
                }
            }
            
            public System.DateTime PaymentOrderDate {
                get {
                    return ((System.DateTime)(this[this.tableGetUnlinkedPaymList.PaymentOrderDateColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.PaymentOrderDateColumn] = value;
                }
            }
            
            public string PaymentNo {
                get {
                    return ((string)(this[this.tableGetUnlinkedPaymList.PaymentNoColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.PaymentNoColumn] = value;
                }
            }
            
            public int OrgAccountID {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.OrgAccountIDColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.OrgAccountIDColumn] = value;
                }
            }
            
            public int OrgAccountIDCorr {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.OrgAccountIDCorrColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.OrgAccountIDCorrColumn] = value;
                }
            }
            
            public bool Direction {
                get {
                    return ((bool)(this[this.tableGetUnlinkedPaymList.DirectionColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.DirectionColumn] = value;
                }
            }
            
            public System.Double PaymentOrderSum {
                get {
                    return ((System.Double)(this[this.tableGetUnlinkedPaymList.PaymentOrderSumColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.PaymentOrderSumColumn] = value;
                }
            }
            
            public string PaymentOrderPurpose {
                get {
                    try {
                        return ((string)(this[this.tableGetUnlinkedPaymList.PaymentOrderPurposeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetUnlinkedPaymList.PaymentOrderPurposeColumn] = value;
                }
            }
            
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableGetUnlinkedPaymList.RemarksColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetUnlinkedPaymList.RemarksColumn] = value;
                }
            }
            
            public bool IsPrinted {
                get {
                    return ((bool)(this[this.tableGetUnlinkedPaymList.IsPrintedColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.IsPrintedColumn] = value;
                }
            }
            
            public int AccountStatementID {
                get {
                    try {
                        return ((int)(this[this.tableGetUnlinkedPaymList.AccountStatementIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetUnlinkedPaymList.AccountStatementIDColumn] = value;
                }
            }
            
            public int OrgsAccountsID {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.OrgsAccountsIDColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.OrgsAccountsIDColumn] = value;
                }
            }
            
            public int OrgIDCorr {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.OrgIDCorrColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.OrgIDCorrColumn] = value;
                }
            }
            
            public int Expr3 {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.Expr3Column]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.Expr3Column] = value;
                }
            }
            
            public int OrgID {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.OrgIDColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.OrgIDColumn] = value;
                }
            }
            
            public int AccountID {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.AccountIDColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.AccountIDColumn] = value;
                }
            }
            
            public int AccountIDCorr {
                get {
                    return ((int)(this[this.tableGetUnlinkedPaymList.AccountIDCorrColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.AccountIDCorrColumn] = value;
                }
            }
            
            public string CurrencyIDCorr {
                get {
                    return ((string)(this[this.tableGetUnlinkedPaymList.CurrencyIDCorrColumn]));
                }
                set {
                    this[this.tableGetUnlinkedPaymList.CurrencyIDCorrColumn] = value;
                }
            }
            
            public bool IsHeaderIDNull() {
                return this.IsNull(this.tableGetUnlinkedPaymList.HeaderIDColumn);
            }
            
            public void SetHeaderIDNull() {
                this[this.tableGetUnlinkedPaymList.HeaderIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPaymentOrderPurposeNull() {
                return this.IsNull(this.tableGetUnlinkedPaymList.PaymentOrderPurposeColumn);
            }
            
            public void SetPaymentOrderPurposeNull() {
                this[this.tableGetUnlinkedPaymList.PaymentOrderPurposeColumn] = System.Convert.DBNull;
            }
            
            public bool IsRemarksNull() {
                return this.IsNull(this.tableGetUnlinkedPaymList.RemarksColumn);
            }
            
            public void SetRemarksNull() {
                this[this.tableGetUnlinkedPaymList.RemarksColumn] = System.Convert.DBNull;
            }
            
            public bool IsAccountStatementIDNull() {
                return this.IsNull(this.tableGetUnlinkedPaymList.AccountStatementIDColumn);
            }
            
            public void SetAccountStatementIDNull() {
                this[this.tableGetUnlinkedPaymList.AccountStatementIDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class GetUnlinkedPaymListRowChangeEvent : EventArgs {
            
            private GetUnlinkedPaymListRow eventRow;
            
            private DataRowAction eventAction;
            
            public GetUnlinkedPaymListRowChangeEvent(GetUnlinkedPaymListRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public GetUnlinkedPaymListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
