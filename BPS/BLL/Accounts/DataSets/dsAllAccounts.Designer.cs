//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace BPS.BLL.Accounts.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsAllAccounts")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsAllAccounts : global::System.Data.DataSet {
        
        private SelectAllAccountsDataTable tableSelectAllAccounts;
        
        private SelectAccountsOperationsDataTable tableSelectAccountsOperations;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsAllAccounts() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
            this.InitExpressions();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsAllAccounts(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.ExcludeSchema)) {
                    this.InitExpressions();
                }
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SelectAllAccounts"] != null)) {
                    base.Tables.Add(new SelectAllAccountsDataTable(ds.Tables["SelectAllAccounts"]));
                }
                if ((ds.Tables["SelectAccountsOperations"] != null)) {
                    base.Tables.Add(new SelectAccountsOperationsDataTable(ds.Tables["SelectAccountsOperations"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                this.InitExpressions();
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectAllAccountsDataTable SelectAllAccounts {
            get {
                return this.tableSelectAllAccounts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SelectAccountsOperationsDataTable SelectAccountsOperations {
            get {
                return this.tableSelectAccountsOperations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsAllAccounts cln = ((dsAllAccounts)(base.Clone()));
            cln.InitVars();
            cln.InitExpressions();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SelectAllAccounts"] != null)) {
                    base.Tables.Add(new SelectAllAccountsDataTable(ds.Tables["SelectAllAccounts"]));
                }
                if ((ds.Tables["SelectAccountsOperations"] != null)) {
                    base.Tables.Add(new SelectAccountsOperationsDataTable(ds.Tables["SelectAccountsOperations"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSelectAllAccounts = ((SelectAllAccountsDataTable)(base.Tables["SelectAllAccounts"]));
            if ((initTable == true)) {
                if ((this.tableSelectAllAccounts != null)) {
                    this.tableSelectAllAccounts.InitVars();
                }
            }
            this.tableSelectAccountsOperations = ((SelectAccountsOperationsDataTable)(base.Tables["SelectAccountsOperations"]));
            if ((initTable == true)) {
                if ((this.tableSelectAccountsOperations != null)) {
                    this.tableSelectAccountsOperations.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsAllAccounts";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsAllAccounts.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("ru-RU");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSelectAllAccounts = new SelectAllAccountsDataTable(false);
            base.Tables.Add(this.tableSelectAllAccounts);
            this.tableSelectAccountsOperations = new SelectAccountsOperationsDataTable(false);
            base.Tables.Add(this.tableSelectAccountsOperations);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectAllAccounts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSelectAccountsOperations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsAllAccounts ds = new dsAllAccounts();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitExpressions() {
            this.SelectAllAccounts.DisposableSum_Column.Expression = "Saldo-SumReserved";
            this.SelectAccountsOperations.Приход_Column.Expression = "IIF(OperationDir,OperationSum, null)";
            this.SelectAccountsOperations.Расход_Column.Expression = "IIF(OperationDir, null,OperationSum)";
            this.SelectAccountsOperations.TransactionTypeNameX_Column.Expression = "iif(OperationTypeID=1,\'%%\',TransactiontypeName)";
            this.SelectAccountsOperations.ПлательщикColumn.Expression = "iif(PaymentsOrdersDirection,OrgNameCorr,OrgName)";
            this.SelectAccountsOperations.ПолучательColumn.Expression = "iif(PaymentsOrdersDirection,OrgName,OrgNameCorr)";
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectAllAccountsRowChangeEventHandler(object sender, SelectAllAccountsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SelectAccountsOperationsRowChangeEventHandler(object sender, SelectAccountsOperationsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectAllAccountsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnSaldo;
            
            private global::System.Data.DataColumn columnSumSent;
            
            private global::System.Data.DataColumn columnSumReserved;
            
            private global::System.Data.DataColumn columnSumWaited;
            
            private global::System.Data.DataColumn columnIsDebit;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnIsInner;
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnRAccount;
            
            private global::System.Data.DataColumn columnOrgName;
            
            private global::System.Data.DataColumn columnCodeINN;
            
            private global::System.Data.DataColumn columnClientGroupID;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientsIsInner;
            
            private global::System.Data.DataColumn columnIsSpecial;
            
            private global::System.Data.DataColumn columnTypeName;
            
            private global::System.Data.DataColumn columnForInnerOnly;
            
            private global::System.Data.DataColumn columnAccountTypeID;
            
            private global::System.Data.DataColumn columnOrgID;
            
            private global::System.Data.DataColumn columnOrgsIsSpecial;
            
            private global::System.Data.DataColumn columnClientGroupName;
            
            private global::System.Data.DataColumn columnBankID;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnCityID;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnCodeBIK;
            
            private global::System.Data.DataColumn columnKAccount;
            
            private global::System.Data.DataColumn columnCurrencyRate;
            
            private global::System.Data.DataColumn columnIsBase;
            
            private global::System.Data.DataColumn columnIsNormal;
            
            private global::System.Data.DataColumn columnDisposableSum_;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsDataTable(bool initExpressions) {
                this.TableName = "SelectAllAccounts";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectAllAccountsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectAllAccountsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SumSentColumn {
                get {
                    return this.columnSumSent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SumReservedColumn {
                get {
                    return this.columnSumReserved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SumWaitedColumn {
                get {
                    return this.columnSumWaited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsDebitColumn {
                get {
                    return this.columnIsDebit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsInnerColumn {
                get {
                    return this.columnIsInner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RAccountColumn {
                get {
                    return this.columnRAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgNameColumn {
                get {
                    return this.columnOrgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeINNColumn {
                get {
                    return this.columnCodeINN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientGroupIDColumn {
                get {
                    return this.columnClientGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientsIsInnerColumn {
                get {
                    return this.columnClientsIsInner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsSpecialColumn {
                get {
                    return this.columnIsSpecial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeNameColumn {
                get {
                    return this.columnTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForInnerOnlyColumn {
                get {
                    return this.columnForInnerOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountTypeIDColumn {
                get {
                    return this.columnAccountTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgIDColumn {
                get {
                    return this.columnOrgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgsIsSpecialColumn {
                get {
                    return this.columnOrgsIsSpecial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientGroupNameColumn {
                get {
                    return this.columnClientGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIDColumn {
                get {
                    return this.columnBankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityIDColumn {
                get {
                    return this.columnCityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeBIKColumn {
                get {
                    return this.columnCodeBIK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KAccountColumn {
                get {
                    return this.columnKAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyRateColumn {
                get {
                    return this.columnCurrencyRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsBaseColumn {
                get {
                    return this.columnIsBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsNormalColumn {
                get {
                    return this.columnIsNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DisposableSum_Column {
                get {
                    return this.columnDisposableSum_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsRow this[int index] {
                get {
                    return ((SelectAllAccountsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAllAccountsRowChangeEventHandler SelectAllAccountsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAllAccountsRowChangeEventHandler SelectAllAccountsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAllAccountsRowChangeEventHandler SelectAllAccountsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAllAccountsRowChangeEventHandler SelectAllAccountsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectAllAccountsRow(SelectAllAccountsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsRow AddSelectAllAccountsRow(
                        int ClientID, 
                        double Saldo, 
                        double SumSent, 
                        double SumReserved, 
                        double SumWaited, 
                        bool IsDebit, 
                        string CurrencyID, 
                        bool IsInner, 
                        string RAccount, 
                        string OrgName, 
                        string CodeINN, 
                        int ClientGroupID, 
                        string ClientName, 
                        bool ClientsIsInner, 
                        bool IsSpecial, 
                        string TypeName, 
                        bool ForInnerOnly, 
                        int AccountTypeID, 
                        int OrgID, 
                        bool OrgsIsSpecial, 
                        string ClientGroupName, 
                        int BankID, 
                        string BankName, 
                        int CityID, 
                        string CityName, 
                        string CodeBIK, 
                        string KAccount, 
                        double CurrencyRate, 
                        bool IsBase, 
                        bool IsNormal, 
                        double DisposableSum_) {
                SelectAllAccountsRow rowSelectAllAccountsRow = ((SelectAllAccountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClientID,
                        Saldo,
                        SumSent,
                        SumReserved,
                        SumWaited,
                        IsDebit,
                        CurrencyID,
                        IsInner,
                        null,
                        RAccount,
                        OrgName,
                        CodeINN,
                        ClientGroupID,
                        ClientName,
                        ClientsIsInner,
                        IsSpecial,
                        TypeName,
                        ForInnerOnly,
                        AccountTypeID,
                        OrgID,
                        OrgsIsSpecial,
                        ClientGroupName,
                        BankID,
                        BankName,
                        CityID,
                        CityName,
                        CodeBIK,
                        KAccount,
                        CurrencyRate,
                        IsBase,
                        IsNormal,
                        DisposableSum_};
                rowSelectAllAccountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectAllAccountsRow);
                return rowSelectAllAccountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsRow AddSelectAllAccountsRow(
                        int ClientID, 
                        double Saldo, 
                        double SumSent, 
                        double SumReserved, 
                        double SumWaited, 
                        bool IsDebit, 
                        string CurrencyID, 
                        bool IsInner, 
                        string RAccount, 
                        string OrgName, 
                        string CodeINN, 
                        int ClientGroupID, 
                        string ClientName, 
                        bool ClientsIsInner, 
                        bool IsSpecial, 
                        string TypeName, 
                        bool ForInnerOnly, 
                        int AccountTypeID, 
                        int OrgID, 
                        bool OrgsIsSpecial, 
                        string ClientGroupName, 
                        int BankID, 
                        string BankName, 
                        int CityID, 
                        string CityName, 
                        string CodeBIK, 
                        string KAccount, 
                        double CurrencyRate, 
                        bool IsBase, 
                        bool IsNormal) {
                SelectAllAccountsRow rowSelectAllAccountsRow = ((SelectAllAccountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClientID,
                        Saldo,
                        SumSent,
                        SumReserved,
                        SumWaited,
                        IsDebit,
                        CurrencyID,
                        IsInner,
                        null,
                        RAccount,
                        OrgName,
                        CodeINN,
                        ClientGroupID,
                        ClientName,
                        ClientsIsInner,
                        IsSpecial,
                        TypeName,
                        ForInnerOnly,
                        AccountTypeID,
                        OrgID,
                        OrgsIsSpecial,
                        ClientGroupName,
                        BankID,
                        BankName,
                        CityID,
                        CityName,
                        CodeBIK,
                        KAccount,
                        CurrencyRate,
                        IsBase,
                        IsNormal,
                        null};
                rowSelectAllAccountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectAllAccountsRow);
                return rowSelectAllAccountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectAllAccountsDataTable cln = ((SelectAllAccountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectAllAccountsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnClientID = base.Columns["ClientID"];
                this.columnSaldo = base.Columns["Saldo"];
                this.columnSumSent = base.Columns["SumSent"];
                this.columnSumReserved = base.Columns["SumReserved"];
                this.columnSumWaited = base.Columns["SumWaited"];
                this.columnIsDebit = base.Columns["IsDebit"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnIsInner = base.Columns["IsInner"];
                this.columnAccountID = base.Columns["AccountID"];
                this.columnRAccount = base.Columns["RAccount"];
                this.columnOrgName = base.Columns["OrgName"];
                this.columnCodeINN = base.Columns["CodeINN"];
                this.columnClientGroupID = base.Columns["ClientGroupID"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientsIsInner = base.Columns["ClientsIsInner"];
                this.columnIsSpecial = base.Columns["IsSpecial"];
                this.columnTypeName = base.Columns["TypeName"];
                this.columnForInnerOnly = base.Columns["ForInnerOnly"];
                this.columnAccountTypeID = base.Columns["AccountTypeID"];
                this.columnOrgID = base.Columns["OrgID"];
                this.columnOrgsIsSpecial = base.Columns["OrgsIsSpecial"];
                this.columnClientGroupName = base.Columns["ClientGroupName"];
                this.columnBankID = base.Columns["BankID"];
                this.columnBankName = base.Columns["BankName"];
                this.columnCityID = base.Columns["CityID"];
                this.columnCityName = base.Columns["CityName"];
                this.columnCodeBIK = base.Columns["CodeBIK"];
                this.columnKAccount = base.Columns["KAccount"];
                this.columnCurrencyRate = base.Columns["CurrencyRate"];
                this.columnIsBase = base.Columns["IsBase"];
                this.columnIsNormal = base.Columns["IsNormal"];
                this.columnDisposableSum_ = base.Columns["DisposableSum "];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnSaldo = new global::System.Data.DataColumn("Saldo", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaldo);
                this.columnSumSent = new global::System.Data.DataColumn("SumSent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumSent);
                this.columnSumReserved = new global::System.Data.DataColumn("SumReserved", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumReserved);
                this.columnSumWaited = new global::System.Data.DataColumn("SumWaited", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumWaited);
                this.columnIsDebit = new global::System.Data.DataColumn("IsDebit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDebit);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnIsInner = new global::System.Data.DataColumn("IsInner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInner);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnRAccount = new global::System.Data.DataColumn("RAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAccount);
                this.columnOrgName = new global::System.Data.DataColumn("OrgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgName);
                this.columnCodeINN = new global::System.Data.DataColumn("CodeINN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeINN);
                this.columnClientGroupID = new global::System.Data.DataColumn("ClientGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientGroupID);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientsIsInner = new global::System.Data.DataColumn("ClientsIsInner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientsIsInner);
                this.columnIsSpecial = new global::System.Data.DataColumn("IsSpecial", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsSpecial);
                this.columnTypeName = new global::System.Data.DataColumn("TypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeName);
                this.columnForInnerOnly = new global::System.Data.DataColumn("ForInnerOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForInnerOnly);
                this.columnAccountTypeID = new global::System.Data.DataColumn("AccountTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountTypeID);
                this.columnOrgID = new global::System.Data.DataColumn("OrgID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgID);
                this.columnOrgsIsSpecial = new global::System.Data.DataColumn("OrgsIsSpecial", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgsIsSpecial);
                this.columnClientGroupName = new global::System.Data.DataColumn("ClientGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientGroupName);
                this.columnBankID = new global::System.Data.DataColumn("BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankID);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnCityID = new global::System.Data.DataColumn("CityID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityID);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnCodeBIK = new global::System.Data.DataColumn("CodeBIK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeBIK);
                this.columnKAccount = new global::System.Data.DataColumn("KAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKAccount);
                this.columnCurrencyRate = new global::System.Data.DataColumn("CurrencyRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyRate);
                this.columnIsBase = new global::System.Data.DataColumn("IsBase", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBase);
                this.columnIsNormal = new global::System.Data.DataColumn("IsNormal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNormal);
                this.columnDisposableSum_ = new global::System.Data.DataColumn("DisposableSum ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisposableSum_);
                this.columnSaldo.AllowDBNull = false;
                this.columnSumSent.AllowDBNull = false;
                this.columnSumReserved.AllowDBNull = false;
                this.columnSumWaited.AllowDBNull = false;
                this.columnIsDebit.AllowDBNull = false;
                this.columnCurrencyID.AllowDBNull = false;
                this.columnAccountID.AutoIncrement = true;
                this.columnAccountID.AllowDBNull = false;
                this.columnAccountID.ReadOnly = true;
                this.columnTypeName.AllowDBNull = false;
                this.columnForInnerOnly.AllowDBNull = false;
                this.columnAccountTypeID.AllowDBNull = false;
                this.columnCurrencyRate.AllowDBNull = false;
                this.columnIsBase.AllowDBNull = false;
                this.columnDisposableSum_.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsRow NewSelectAllAccountsRow() {
                return ((SelectAllAccountsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectAllAccountsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectAllAccountsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.DisposableSum_Column.Expression = "Saldo-SumReserved";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectAllAccountsRowChanged != null)) {
                    this.SelectAllAccountsRowChanged(this, new SelectAllAccountsRowChangeEvent(((SelectAllAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectAllAccountsRowChanging != null)) {
                    this.SelectAllAccountsRowChanging(this, new SelectAllAccountsRowChangeEvent(((SelectAllAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectAllAccountsRowDeleted != null)) {
                    this.SelectAllAccountsRowDeleted(this, new SelectAllAccountsRowChangeEvent(((SelectAllAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectAllAccountsRowDeleting != null)) {
                    this.SelectAllAccountsRowDeleting(this, new SelectAllAccountsRowChangeEvent(((SelectAllAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectAllAccountsRow(SelectAllAccountsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsAllAccounts ds = new dsAllAccounts();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectAllAccountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SelectAccountsOperationsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnInitDate;
            
            private global::System.Data.DataColumn columnCompleteDate;
            
            private global::System.Data.DataColumn columnOperationID;
            
            private global::System.Data.DataColumn columnTransactionOperationID;
            
            private global::System.Data.DataColumn columnOperationIsPrimary;
            
            private global::System.Data.DataColumn columnOperationSum;
            
            private global::System.Data.DataColumn columnOperationDir;
            
            private global::System.Data.DataColumn columnAccountID;
            
            private global::System.Data.DataColumn columnTransactionTypeName;
            
            private global::System.Data.DataColumn columnPostedDate;
            
            private global::System.Data.DataColumn columnCommitedDate;
            
            private global::System.Data.DataColumn columnOperationTypeID;
            
            private global::System.Data.DataColumn columnPaymentNo;
            
            private global::System.Data.DataColumn columnPaymentOrderDate;
            
            private global::System.Data.DataColumn columnPaymentsOrdersDirection;
            
            private global::System.Data.DataColumn columnOrgName;
            
            private global::System.Data.DataColumn columnOrgNameCorr;
            
            private global::System.Data.DataColumn columnOrgID;
            
            private global::System.Data.DataColumn columnOrgIDCorr;
            
            private global::System.Data.DataColumn columnAccountTypeID;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnClientGroupID;
            
            private global::System.Data.DataColumn columnClientName;
            
            private global::System.Data.DataColumn columnClientGroupName;
            
            private global::System.Data.DataColumn columnПриход_;
            
            private global::System.Data.DataColumn columnРасход_;
            
            private global::System.Data.DataColumn columnTransactionTypeNameX_;
            
            private global::System.Data.DataColumn columnПлательщик;
            
            private global::System.Data.DataColumn columnПолучатель;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnRAccount;
            
            private global::System.Data.DataColumn columnCurrencyRate;
            
            private global::System.Data.DataColumn columnTransactionCompleted;
            
            private global::System.Data.DataColumn columnHeaderDate;
            
            private global::System.Data.DataColumn columnFinishDate;
            
            private global::System.Data.DataColumn columnPaymentOrderPurpose;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsDataTable() : 
                    this(false) {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsDataTable(bool initExpressions) {
                this.TableName = "SelectAccountsOperations";
                this.BeginInit();
                this.InitClass();
                if ((initExpressions == true)) {
                    this.InitExpressions();
                }
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectAccountsOperationsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SelectAccountsOperationsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InitDateColumn {
                get {
                    return this.columnInitDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompleteDateColumn {
                get {
                    return this.columnCompleteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationIDColumn {
                get {
                    return this.columnOperationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionOperationIDColumn {
                get {
                    return this.columnTransactionOperationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationIsPrimaryColumn {
                get {
                    return this.columnOperationIsPrimary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationSumColumn {
                get {
                    return this.columnOperationSum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationDirColumn {
                get {
                    return this.columnOperationDir;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountIDColumn {
                get {
                    return this.columnAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionTypeNameColumn {
                get {
                    return this.columnTransactionTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PostedDateColumn {
                get {
                    return this.columnPostedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommitedDateColumn {
                get {
                    return this.columnCommitedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OperationTypeIDColumn {
                get {
                    return this.columnOperationTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentNoColumn {
                get {
                    return this.columnPaymentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentOrderDateColumn {
                get {
                    return this.columnPaymentOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentsOrdersDirectionColumn {
                get {
                    return this.columnPaymentsOrdersDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgNameColumn {
                get {
                    return this.columnOrgName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgNameCorrColumn {
                get {
                    return this.columnOrgNameCorr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgIDColumn {
                get {
                    return this.columnOrgID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrgIDCorrColumn {
                get {
                    return this.columnOrgIDCorr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountTypeIDColumn {
                get {
                    return this.columnAccountTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientGroupIDColumn {
                get {
                    return this.columnClientGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientNameColumn {
                get {
                    return this.columnClientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientGroupNameColumn {
                get {
                    return this.columnClientGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Приход_Column {
                get {
                    return this.columnПриход_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Расход_Column {
                get {
                    return this.columnРасход_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionTypeNameX_Column {
                get {
                    return this.columnTransactionTypeNameX_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПлательщикColumn {
                get {
                    return this.columnПлательщик;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПолучательColumn {
                get {
                    return this.columnПолучатель;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RAccountColumn {
                get {
                    return this.columnRAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrencyRateColumn {
                get {
                    return this.columnCurrencyRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionCompletedColumn {
                get {
                    return this.columnTransactionCompleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeaderDateColumn {
                get {
                    return this.columnHeaderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishDateColumn {
                get {
                    return this.columnFinishDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaymentOrderPurposeColumn {
                get {
                    return this.columnPaymentOrderPurpose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsRow this[int index] {
                get {
                    return ((SelectAccountsOperationsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAccountsOperationsRowChangeEventHandler SelectAccountsOperationsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAccountsOperationsRowChangeEventHandler SelectAccountsOperationsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAccountsOperationsRowChangeEventHandler SelectAccountsOperationsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SelectAccountsOperationsRowChangeEventHandler SelectAccountsOperationsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSelectAccountsOperationsRow(SelectAccountsOperationsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsRow AddSelectAccountsOperationsRow(
                        System.DateTime InitDate, 
                        System.DateTime CompleteDate, 
                        int TransactionOperationID, 
                        bool OperationIsPrimary, 
                        double OperationSum, 
                        bool OperationDir, 
                        int AccountID, 
                        string TransactionTypeName, 
                        System.DateTime PostedDate, 
                        System.DateTime CommitedDate, 
                        int OperationTypeID, 
                        string PaymentNo, 
                        System.DateTime PaymentOrderDate, 
                        bool PaymentsOrdersDirection, 
                        string OrgName, 
                        string OrgNameCorr, 
                        int AccountTypeID, 
                        int ClientGroupID, 
                        string ClientName, 
                        string ClientGroupName, 
                        double Приход_, 
                        double Расход_, 
                        string TransactionTypeNameX_, 
                        string Плательщик, 
                        string Получатель, 
                        string CurrencyID, 
                        string RAccount, 
                        double CurrencyRate, 
                        bool TransactionCompleted, 
                        System.DateTime HeaderDate, 
                        System.DateTime FinishDate, 
                        string PaymentOrderPurpose) {
                SelectAccountsOperationsRow rowSelectAccountsOperationsRow = ((SelectAccountsOperationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InitDate,
                        CompleteDate,
                        null,
                        TransactionOperationID,
                        OperationIsPrimary,
                        OperationSum,
                        OperationDir,
                        AccountID,
                        TransactionTypeName,
                        PostedDate,
                        CommitedDate,
                        OperationTypeID,
                        PaymentNo,
                        PaymentOrderDate,
                        PaymentsOrdersDirection,
                        OrgName,
                        OrgNameCorr,
                        null,
                        null,
                        AccountTypeID,
                        null,
                        ClientGroupID,
                        ClientName,
                        ClientGroupName,
                        Приход_,
                        Расход_,
                        TransactionTypeNameX_,
                        Плательщик,
                        Получатель,
                        CurrencyID,
                        RAccount,
                        CurrencyRate,
                        TransactionCompleted,
                        HeaderDate,
                        FinishDate,
                        PaymentOrderPurpose};
                rowSelectAccountsOperationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectAccountsOperationsRow);
                return rowSelectAccountsOperationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsRow AddSelectAccountsOperationsRow(
                        System.DateTime InitDate, 
                        System.DateTime CompleteDate, 
                        int TransactionOperationID, 
                        bool OperationIsPrimary, 
                        double OperationSum, 
                        bool OperationDir, 
                        int AccountID, 
                        string TransactionTypeName, 
                        System.DateTime PostedDate, 
                        System.DateTime CommitedDate, 
                        int OperationTypeID, 
                        string PaymentNo, 
                        System.DateTime PaymentOrderDate, 
                        bool PaymentsOrdersDirection, 
                        string OrgName, 
                        string OrgNameCorr, 
                        int AccountTypeID, 
                        int ClientGroupID, 
                        string ClientName, 
                        string ClientGroupName, 
                        string CurrencyID, 
                        string RAccount, 
                        double CurrencyRate, 
                        bool TransactionCompleted, 
                        System.DateTime HeaderDate, 
                        System.DateTime FinishDate, 
                        string PaymentOrderPurpose) {
                SelectAccountsOperationsRow rowSelectAccountsOperationsRow = ((SelectAccountsOperationsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InitDate,
                        CompleteDate,
                        null,
                        TransactionOperationID,
                        OperationIsPrimary,
                        OperationSum,
                        OperationDir,
                        AccountID,
                        TransactionTypeName,
                        PostedDate,
                        CommitedDate,
                        OperationTypeID,
                        PaymentNo,
                        PaymentOrderDate,
                        PaymentsOrdersDirection,
                        OrgName,
                        OrgNameCorr,
                        null,
                        null,
                        AccountTypeID,
                        null,
                        ClientGroupID,
                        ClientName,
                        ClientGroupName,
                        null,
                        null,
                        null,
                        null,
                        null,
                        CurrencyID,
                        RAccount,
                        CurrencyRate,
                        TransactionCompleted,
                        HeaderDate,
                        FinishDate,
                        PaymentOrderPurpose};
                rowSelectAccountsOperationsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSelectAccountsOperationsRow);
                return rowSelectAccountsOperationsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SelectAccountsOperationsDataTable cln = ((SelectAccountsOperationsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SelectAccountsOperationsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInitDate = base.Columns["InitDate"];
                this.columnCompleteDate = base.Columns["CompleteDate"];
                this.columnOperationID = base.Columns["OperationID"];
                this.columnTransactionOperationID = base.Columns["TransactionOperationID"];
                this.columnOperationIsPrimary = base.Columns["OperationIsPrimary"];
                this.columnOperationSum = base.Columns["OperationSum"];
                this.columnOperationDir = base.Columns["OperationDir"];
                this.columnAccountID = base.Columns["AccountID"];
                this.columnTransactionTypeName = base.Columns["TransactionTypeName"];
                this.columnPostedDate = base.Columns["PostedDate"];
                this.columnCommitedDate = base.Columns["CommitedDate"];
                this.columnOperationTypeID = base.Columns["OperationTypeID"];
                this.columnPaymentNo = base.Columns["PaymentNo"];
                this.columnPaymentOrderDate = base.Columns["PaymentOrderDate"];
                this.columnPaymentsOrdersDirection = base.Columns["PaymentsOrdersDirection"];
                this.columnOrgName = base.Columns["OrgName"];
                this.columnOrgNameCorr = base.Columns["OrgNameCorr"];
                this.columnOrgID = base.Columns["OrgID"];
                this.columnOrgIDCorr = base.Columns["OrgIDCorr"];
                this.columnAccountTypeID = base.Columns["AccountTypeID"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnClientGroupID = base.Columns["ClientGroupID"];
                this.columnClientName = base.Columns["ClientName"];
                this.columnClientGroupName = base.Columns["ClientGroupName"];
                this.columnПриход_ = base.Columns["Приход "];
                this.columnРасход_ = base.Columns["Расход "];
                this.columnTransactionTypeNameX_ = base.Columns["TransactionTypeNameX "];
                this.columnПлательщик = base.Columns["Плательщик"];
                this.columnПолучатель = base.Columns["Получатель"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnRAccount = base.Columns["RAccount"];
                this.columnCurrencyRate = base.Columns["CurrencyRate"];
                this.columnTransactionCompleted = base.Columns["TransactionCompleted"];
                this.columnHeaderDate = base.Columns["HeaderDate"];
                this.columnFinishDate = base.Columns["FinishDate"];
                this.columnPaymentOrderPurpose = base.Columns["PaymentOrderPurpose"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInitDate = new global::System.Data.DataColumn("InitDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInitDate);
                this.columnCompleteDate = new global::System.Data.DataColumn("CompleteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompleteDate);
                this.columnOperationID = new global::System.Data.DataColumn("OperationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationID);
                this.columnTransactionOperationID = new global::System.Data.DataColumn("TransactionOperationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionOperationID);
                this.columnOperationIsPrimary = new global::System.Data.DataColumn("OperationIsPrimary", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationIsPrimary);
                this.columnOperationSum = new global::System.Data.DataColumn("OperationSum", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationSum);
                this.columnOperationDir = new global::System.Data.DataColumn("OperationDir", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationDir);
                this.columnAccountID = new global::System.Data.DataColumn("AccountID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountID);
                this.columnTransactionTypeName = new global::System.Data.DataColumn("TransactionTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionTypeName);
                this.columnPostedDate = new global::System.Data.DataColumn("PostedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostedDate);
                this.columnCommitedDate = new global::System.Data.DataColumn("CommitedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommitedDate);
                this.columnOperationTypeID = new global::System.Data.DataColumn("OperationTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperationTypeID);
                this.columnPaymentNo = new global::System.Data.DataColumn("PaymentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentNo);
                this.columnPaymentOrderDate = new global::System.Data.DataColumn("PaymentOrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentOrderDate);
                this.columnPaymentsOrdersDirection = new global::System.Data.DataColumn("PaymentsOrdersDirection", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentsOrdersDirection);
                this.columnOrgName = new global::System.Data.DataColumn("OrgName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgName);
                this.columnOrgNameCorr = new global::System.Data.DataColumn("OrgNameCorr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgNameCorr);
                this.columnOrgID = new global::System.Data.DataColumn("OrgID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgID);
                this.columnOrgIDCorr = new global::System.Data.DataColumn("OrgIDCorr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrgIDCorr);
                this.columnAccountTypeID = new global::System.Data.DataColumn("AccountTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountTypeID);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnClientGroupID = new global::System.Data.DataColumn("ClientGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientGroupID);
                this.columnClientName = new global::System.Data.DataColumn("ClientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientName);
                this.columnClientGroupName = new global::System.Data.DataColumn("ClientGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientGroupName);
                this.columnПриход_ = new global::System.Data.DataColumn("Приход ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПриход_);
                this.columnРасход_ = new global::System.Data.DataColumn("Расход ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnРасход_);
                this.columnTransactionTypeNameX_ = new global::System.Data.DataColumn("TransactionTypeNameX ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionTypeNameX_);
                this.columnПлательщик = new global::System.Data.DataColumn("Плательщик", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПлательщик);
                this.columnПолучатель = new global::System.Data.DataColumn("Получатель", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПолучатель);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnRAccount = new global::System.Data.DataColumn("RAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRAccount);
                this.columnCurrencyRate = new global::System.Data.DataColumn("CurrencyRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyRate);
                this.columnTransactionCompleted = new global::System.Data.DataColumn("TransactionCompleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionCompleted);
                this.columnHeaderDate = new global::System.Data.DataColumn("HeaderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeaderDate);
                this.columnFinishDate = new global::System.Data.DataColumn("FinishDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishDate);
                this.columnPaymentOrderPurpose = new global::System.Data.DataColumn("PaymentOrderPurpose", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentOrderPurpose);
                this.columnInitDate.ReadOnly = true;
                this.columnCompleteDate.ReadOnly = true;
                this.columnOperationID.AutoIncrement = true;
                this.columnOperationID.AllowDBNull = false;
                this.columnOperationID.ReadOnly = true;
                this.columnTransactionOperationID.AllowDBNull = false;
                this.columnOperationIsPrimary.AllowDBNull = false;
                this.columnOperationSum.AllowDBNull = false;
                this.columnOperationDir.AllowDBNull = false;
                this.columnAccountID.AllowDBNull = false;
                this.columnOperationTypeID.AllowDBNull = false;
                this.columnOrgID.AutoIncrement = true;
                this.columnOrgID.ReadOnly = true;
                this.columnOrgIDCorr.AutoIncrement = true;
                this.columnOrgIDCorr.ReadOnly = true;
                this.columnClientID.AutoIncrement = true;
                this.columnClientID.ReadOnly = true;
                this.columnПриход_.ReadOnly = true;
                this.columnРасход_.ReadOnly = true;
                this.columnTransactionTypeNameX_.ReadOnly = true;
                this.columnПлательщик.ReadOnly = true;
                this.columnПолучатель.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsRow NewSelectAccountsOperationsRow() {
                return ((SelectAccountsOperationsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SelectAccountsOperationsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SelectAccountsOperationsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitExpressions() {
                this.Приход_Column.Expression = "IIF(OperationDir,OperationSum, null)";
                this.Расход_Column.Expression = "IIF(OperationDir, null,OperationSum)";
                this.TransactionTypeNameX_Column.Expression = "iif(OperationTypeID=1,\'%%\',TransactiontypeName)";
                this.ПлательщикColumn.Expression = "iif(PaymentsOrdersDirection,OrgNameCorr,OrgName)";
                this.ПолучательColumn.Expression = "iif(PaymentsOrdersDirection,OrgName,OrgNameCorr)";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SelectAccountsOperationsRowChanged != null)) {
                    this.SelectAccountsOperationsRowChanged(this, new SelectAccountsOperationsRowChangeEvent(((SelectAccountsOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SelectAccountsOperationsRowChanging != null)) {
                    this.SelectAccountsOperationsRowChanging(this, new SelectAccountsOperationsRowChangeEvent(((SelectAccountsOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SelectAccountsOperationsRowDeleted != null)) {
                    this.SelectAccountsOperationsRowDeleted(this, new SelectAccountsOperationsRowChangeEvent(((SelectAccountsOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SelectAccountsOperationsRowDeleting != null)) {
                    this.SelectAccountsOperationsRowDeleting(this, new SelectAccountsOperationsRowChangeEvent(((SelectAccountsOperationsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSelectAccountsOperationsRow(SelectAccountsOperationsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsAllAccounts ds = new dsAllAccounts();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SelectAccountsOperationsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectAllAccountsRow : global::System.Data.DataRow {
            
            private SelectAllAccountsDataTable tableSelectAllAccounts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectAllAccountsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectAllAccounts = ((SelectAllAccountsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAllAccounts.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Saldo {
                get {
                    return ((double)(this[this.tableSelectAllAccounts.SaldoColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.SaldoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SumSent {
                get {
                    return ((double)(this[this.tableSelectAllAccounts.SumSentColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.SumSentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SumReserved {
                get {
                    return ((double)(this[this.tableSelectAllAccounts.SumReservedColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.SumReservedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SumWaited {
                get {
                    return ((double)(this[this.tableSelectAllAccounts.SumWaitedColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.SumWaitedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDebit {
                get {
                    return ((bool)(this[this.tableSelectAllAccounts.IsDebitColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.IsDebitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyID {
                get {
                    return ((string)(this[this.tableSelectAllAccounts.CurrencyIDColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInner {
                get {
                    try {
                        return ((bool)(this[this.tableSelectAllAccounts.IsInnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsInner\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.IsInnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccountID {
                get {
                    return ((int)(this[this.tableSelectAllAccounts.AccountIDColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RAccount {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.RAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAccount\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.RAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.OrgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgName\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.OrgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeINN {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.CodeINNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeINN\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.CodeINNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientGroupID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAllAccounts.ClientGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientGroupID\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.ClientGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ClientsIsInner {
                get {
                    try {
                        return ((bool)(this[this.tableSelectAllAccounts.ClientsIsInnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientsIsInner\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.ClientsIsInnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpecial {
                get {
                    try {
                        return ((bool)(this[this.tableSelectAllAccounts.IsSpecialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsSpecial\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.IsSpecialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeName {
                get {
                    return ((string)(this[this.tableSelectAllAccounts.TypeNameColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.TypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ForInnerOnly {
                get {
                    return ((bool)(this[this.tableSelectAllAccounts.ForInnerOnlyColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.ForInnerOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccountTypeID {
                get {
                    return ((int)(this[this.tableSelectAllAccounts.AccountTypeIDColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.AccountTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrgID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAllAccounts.OrgIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgID\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.OrgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OrgsIsSpecial {
                get {
                    try {
                        return ((bool)(this[this.tableSelectAllAccounts.OrgsIsSpecialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgsIsSpecial\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.OrgsIsSpecialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.ClientGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientGroupName\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.ClientGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BankID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAllAccounts.BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankID\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CityID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAllAccounts.CityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityID\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.CityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeBIK {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.CodeBIKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CodeBIK\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.CodeBIKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KAccount {
                get {
                    try {
                        return ((string)(this[this.tableSelectAllAccounts.KAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KAccount\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.KAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrencyRate {
                get {
                    return ((double)(this[this.tableSelectAllAccounts.CurrencyRateColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.CurrencyRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBase {
                get {
                    return ((bool)(this[this.tableSelectAllAccounts.IsBaseColumn]));
                }
                set {
                    this[this.tableSelectAllAccounts.IsBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNormal {
                get {
                    try {
                        return ((bool)(this[this.tableSelectAllAccounts.IsNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNormal\' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.IsNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DisposableSum_ {
                get {
                    try {
                        return ((double)(this[this.tableSelectAllAccounts.DisposableSum_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisposableSum \' in table \'SelectAllAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAllAccounts.DisposableSum_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableSelectAllAccounts.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientIDNull() {
                this[this.tableSelectAllAccounts.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsInnerNull() {
                return this.IsNull(this.tableSelectAllAccounts.IsInnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsInnerNull() {
                this[this.tableSelectAllAccounts.IsInnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRAccountNull() {
                return this.IsNull(this.tableSelectAllAccounts.RAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRAccountNull() {
                this[this.tableSelectAllAccounts.RAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgNameNull() {
                return this.IsNull(this.tableSelectAllAccounts.OrgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgNameNull() {
                this[this.tableSelectAllAccounts.OrgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeINNNull() {
                return this.IsNull(this.tableSelectAllAccounts.CodeINNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeINNNull() {
                this[this.tableSelectAllAccounts.CodeINNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientGroupIDNull() {
                return this.IsNull(this.tableSelectAllAccounts.ClientGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientGroupIDNull() {
                this[this.tableSelectAllAccounts.ClientGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableSelectAllAccounts.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientNameNull() {
                this[this.tableSelectAllAccounts.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientsIsInnerNull() {
                return this.IsNull(this.tableSelectAllAccounts.ClientsIsInnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientsIsInnerNull() {
                this[this.tableSelectAllAccounts.ClientsIsInnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsSpecialNull() {
                return this.IsNull(this.tableSelectAllAccounts.IsSpecialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsSpecialNull() {
                this[this.tableSelectAllAccounts.IsSpecialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgIDNull() {
                return this.IsNull(this.tableSelectAllAccounts.OrgIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgIDNull() {
                this[this.tableSelectAllAccounts.OrgIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgsIsSpecialNull() {
                return this.IsNull(this.tableSelectAllAccounts.OrgsIsSpecialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgsIsSpecialNull() {
                this[this.tableSelectAllAccounts.OrgsIsSpecialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientGroupNameNull() {
                return this.IsNull(this.tableSelectAllAccounts.ClientGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientGroupNameNull() {
                this[this.tableSelectAllAccounts.ClientGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIDNull() {
                return this.IsNull(this.tableSelectAllAccounts.BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIDNull() {
                this[this.tableSelectAllAccounts.BankIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableSelectAllAccounts.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankNameNull() {
                this[this.tableSelectAllAccounts.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityIDNull() {
                return this.IsNull(this.tableSelectAllAccounts.CityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityIDNull() {
                this[this.tableSelectAllAccounts.CityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableSelectAllAccounts.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNameNull() {
                this[this.tableSelectAllAccounts.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeBIKNull() {
                return this.IsNull(this.tableSelectAllAccounts.CodeBIKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeBIKNull() {
                this[this.tableSelectAllAccounts.CodeBIKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKAccountNull() {
                return this.IsNull(this.tableSelectAllAccounts.KAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKAccountNull() {
                this[this.tableSelectAllAccounts.KAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsNormalNull() {
                return this.IsNull(this.tableSelectAllAccounts.IsNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsNormalNull() {
                this[this.tableSelectAllAccounts.IsNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDisposableSum_Null() {
                return this.IsNull(this.tableSelectAllAccounts.DisposableSum_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDisposableSum_Null() {
                this[this.tableSelectAllAccounts.DisposableSum_Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SelectAccountsOperationsRow : global::System.Data.DataRow {
            
            private SelectAccountsOperationsDataTable tableSelectAccountsOperations;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelectAccountsOperationsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSelectAccountsOperations = ((SelectAccountsOperationsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InitDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectAccountsOperations.InitDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InitDate\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.InitDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CompleteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectAccountsOperations.CompleteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompleteDate\' in table \'SelectAccountsOperations\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.CompleteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OperationID {
                get {
                    return ((int)(this[this.tableSelectAccountsOperations.OperationIDColumn]));
                }
                set {
                    this[this.tableSelectAccountsOperations.OperationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TransactionOperationID {
                get {
                    return ((int)(this[this.tableSelectAccountsOperations.TransactionOperationIDColumn]));
                }
                set {
                    this[this.tableSelectAccountsOperations.TransactionOperationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OperationIsPrimary {
                get {
                    return ((bool)(this[this.tableSelectAccountsOperations.OperationIsPrimaryColumn]));
                }
                set {
                    this[this.tableSelectAccountsOperations.OperationIsPrimaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OperationSum {
                get {
                    return ((double)(this[this.tableSelectAccountsOperations.OperationSumColumn]));
                }
                set {
                    this[this.tableSelectAccountsOperations.OperationSumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OperationDir {
                get {
                    return ((bool)(this[this.tableSelectAccountsOperations.OperationDirColumn]));
                }
                set {
                    this[this.tableSelectAccountsOperations.OperationDirColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccountID {
                get {
                    return ((int)(this[this.tableSelectAccountsOperations.AccountIDColumn]));
                }
                set {
                    this[this.tableSelectAccountsOperations.AccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransactionTypeName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.TransactionTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionTypeName\' in table \'SelectAccountsOperations\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.TransactionTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PostedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectAccountsOperations.PostedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostedDate\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.PostedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CommitedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectAccountsOperations.CommitedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommitedDate\' in table \'SelectAccountsOperations\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.CommitedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OperationTypeID {
                get {
                    return ((int)(this[this.tableSelectAccountsOperations.OperationTypeIDColumn]));
                }
                set {
                    this[this.tableSelectAccountsOperations.OperationTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentNo {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.PaymentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentNo\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.PaymentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PaymentOrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectAccountsOperations.PaymentOrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentOrderDate\' in table \'SelectAccountsOperations\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.PaymentOrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PaymentsOrdersDirection {
                get {
                    try {
                        return ((bool)(this[this.tableSelectAccountsOperations.PaymentsOrdersDirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentsOrdersDirection\' in table \'SelectAccountsOperations" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.PaymentsOrdersDirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.OrgNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgName\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.OrgNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrgNameCorr {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.OrgNameCorrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgNameCorr\' in table \'SelectAccountsOperations\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.OrgNameCorrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrgID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAccountsOperations.OrgIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgID\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.OrgIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrgIDCorr {
                get {
                    try {
                        return ((int)(this[this.tableSelectAccountsOperations.OrgIDCorrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrgIDCorr\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.OrgIDCorrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccountTypeID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAccountsOperations.AccountTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountTypeID\' in table \'SelectAccountsOperations\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.AccountTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAccountsOperations.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientGroupID {
                get {
                    try {
                        return ((int)(this[this.tableSelectAccountsOperations.ClientGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientGroupID\' in table \'SelectAccountsOperations\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.ClientGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.ClientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientName\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.ClientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ClientGroupName {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.ClientGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientGroupName\' in table \'SelectAccountsOperations\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.ClientGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Приход_ {
                get {
                    try {
                        return ((double)(this[this.tableSelectAccountsOperations.Приход_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Приход \' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.Приход_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Расход_ {
                get {
                    try {
                        return ((double)(this[this.tableSelectAccountsOperations.Расход_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Расход \' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.Расход_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TransactionTypeNameX_ {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.TransactionTypeNameX_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionTypeNameX \' in table \'SelectAccountsOperations\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.TransactionTypeNameX_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Плательщик {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.ПлательщикColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Плательщик\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.ПлательщикColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Получатель {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.ПолучательColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Получатель\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.ПолучательColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrencyID {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RAccount {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.RAccountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RAccount\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.RAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CurrencyRate {
                get {
                    try {
                        return ((double)(this[this.tableSelectAccountsOperations.CurrencyRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyRate\' in table \'SelectAccountsOperations\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.CurrencyRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TransactionCompleted {
                get {
                    try {
                        return ((bool)(this[this.tableSelectAccountsOperations.TransactionCompletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionCompleted\' in table \'SelectAccountsOperations\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.TransactionCompletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime HeaderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectAccountsOperations.HeaderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeaderDate\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.HeaderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FinishDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSelectAccountsOperations.FinishDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishDate\' in table \'SelectAccountsOperations\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.FinishDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaymentOrderPurpose {
                get {
                    try {
                        return ((string)(this[this.tableSelectAccountsOperations.PaymentOrderPurposeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentOrderPurpose\' in table \'SelectAccountsOperations\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSelectAccountsOperations.PaymentOrderPurposeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInitDateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.InitDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInitDateNull() {
                this[this.tableSelectAccountsOperations.InitDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompleteDateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.CompleteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompleteDateNull() {
                this[this.tableSelectAccountsOperations.CompleteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionTypeNameNull() {
                return this.IsNull(this.tableSelectAccountsOperations.TransactionTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionTypeNameNull() {
                this[this.tableSelectAccountsOperations.TransactionTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPostedDateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.PostedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPostedDateNull() {
                this[this.tableSelectAccountsOperations.PostedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommitedDateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.CommitedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommitedDateNull() {
                this[this.tableSelectAccountsOperations.CommitedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentNoNull() {
                return this.IsNull(this.tableSelectAccountsOperations.PaymentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentNoNull() {
                this[this.tableSelectAccountsOperations.PaymentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentOrderDateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.PaymentOrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentOrderDateNull() {
                this[this.tableSelectAccountsOperations.PaymentOrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentsOrdersDirectionNull() {
                return this.IsNull(this.tableSelectAccountsOperations.PaymentsOrdersDirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentsOrdersDirectionNull() {
                this[this.tableSelectAccountsOperations.PaymentsOrdersDirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgNameNull() {
                return this.IsNull(this.tableSelectAccountsOperations.OrgNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgNameNull() {
                this[this.tableSelectAccountsOperations.OrgNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgNameCorrNull() {
                return this.IsNull(this.tableSelectAccountsOperations.OrgNameCorrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgNameCorrNull() {
                this[this.tableSelectAccountsOperations.OrgNameCorrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgIDNull() {
                return this.IsNull(this.tableSelectAccountsOperations.OrgIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgIDNull() {
                this[this.tableSelectAccountsOperations.OrgIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrgIDCorrNull() {
                return this.IsNull(this.tableSelectAccountsOperations.OrgIDCorrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrgIDCorrNull() {
                this[this.tableSelectAccountsOperations.OrgIDCorrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountTypeIDNull() {
                return this.IsNull(this.tableSelectAccountsOperations.AccountTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountTypeIDNull() {
                this[this.tableSelectAccountsOperations.AccountTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientIDNull() {
                return this.IsNull(this.tableSelectAccountsOperations.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientIDNull() {
                this[this.tableSelectAccountsOperations.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientGroupIDNull() {
                return this.IsNull(this.tableSelectAccountsOperations.ClientGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientGroupIDNull() {
                this[this.tableSelectAccountsOperations.ClientGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientNameNull() {
                return this.IsNull(this.tableSelectAccountsOperations.ClientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientNameNull() {
                this[this.tableSelectAccountsOperations.ClientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientGroupNameNull() {
                return this.IsNull(this.tableSelectAccountsOperations.ClientGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientGroupNameNull() {
                this[this.tableSelectAccountsOperations.ClientGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПриход_Null() {
                return this.IsNull(this.tableSelectAccountsOperations.Приход_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПриход_Null() {
                this[this.tableSelectAccountsOperations.Приход_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsРасход_Null() {
                return this.IsNull(this.tableSelectAccountsOperations.Расход_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetРасход_Null() {
                this[this.tableSelectAccountsOperations.Расход_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionTypeNameX_Null() {
                return this.IsNull(this.tableSelectAccountsOperations.TransactionTypeNameX_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionTypeNameX_Null() {
                this[this.tableSelectAccountsOperations.TransactionTypeNameX_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПлательщикNull() {
                return this.IsNull(this.tableSelectAccountsOperations.ПлательщикColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПлательщикNull() {
                this[this.tableSelectAccountsOperations.ПлательщикColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsПолучательNull() {
                return this.IsNull(this.tableSelectAccountsOperations.ПолучательColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetПолучательNull() {
                this[this.tableSelectAccountsOperations.ПолучательColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableSelectAccountsOperations.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tableSelectAccountsOperations.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRAccountNull() {
                return this.IsNull(this.tableSelectAccountsOperations.RAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRAccountNull() {
                this[this.tableSelectAccountsOperations.RAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrencyRateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.CurrencyRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrencyRateNull() {
                this[this.tableSelectAccountsOperations.CurrencyRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTransactionCompletedNull() {
                return this.IsNull(this.tableSelectAccountsOperations.TransactionCompletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTransactionCompletedNull() {
                this[this.tableSelectAccountsOperations.TransactionCompletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeaderDateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.HeaderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeaderDateNull() {
                this[this.tableSelectAccountsOperations.HeaderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishDateNull() {
                return this.IsNull(this.tableSelectAccountsOperations.FinishDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishDateNull() {
                this[this.tableSelectAccountsOperations.FinishDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaymentOrderPurposeNull() {
                return this.IsNull(this.tableSelectAccountsOperations.PaymentOrderPurposeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaymentOrderPurposeNull() {
                this[this.tableSelectAccountsOperations.PaymentOrderPurposeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectAllAccountsRowChangeEvent : global::System.EventArgs {
            
            private SelectAllAccountsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsRowChangeEvent(SelectAllAccountsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAllAccountsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SelectAccountsOperationsRowChangeEvent : global::System.EventArgs {
            
            private SelectAccountsOperationsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsRowChangeEvent(SelectAccountsOperationsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SelectAccountsOperationsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591